;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(query-replace-history minibuffer-history yes-or-no-p-history empty-history counsel-git-grep-history woman-topic-history imenu--history-list buffer-name-history pyvenv-workon-history swiper-history counsel-describe-symbol-history read-expression-history counsel-M-x-history file-name-history extended-command-history ivy-history))
(setq query-replace-history '("test" "a"))
(setq minibuffer-history '("test"))
(setq yes-or-no-p-history '("yes"))
(setq counsel-git-grep-history '(#("lsp-client" 0 10 (ivy-index 0)) #("do you want to re" 0 17 (ivy-index 0))))
(setq buffer-name-history '("*Customize Group: Emacs*"))
(setq pyvenv-workon-history '(#("py" 0 2 (ivy-index 0)) #("pyto" 0 4 (ivy-index 0)) #("pyt" 0 3 (ivy-index 0))))
(setq swiper-history '("."))
(setq counsel-describe-symbol-history '(#("^lsp-python-ms-up" 0 17 (ivy-index 0)) #("^lsp-python-ms-upda" 0 19 (ivy-index 0)) #("^lsp-python-ms-update" 0 21 (ivy-index 0)) #("^lsp-python-ms-" 0 15 (ivy-index 0)) #("^lsp-python-ms--" 0 16 (ivy-index 6))))
(setq read-expression-history '("(projectile-project-root)" "(lsp-workspace-root)" "lsp-workspace-folders-changed-hook" "(lsp-python-ms--workspace-root)" "(workspace-root)" "(lsp-python-ms-locate-python)" "(lsp-python-ms--get-python-ver-and-syspath)" "venv" "lsp-python-ms-python-executable-cmd" "WORKON_HOME" "(WORKON_HOME)" "(lsp-ui-doc-show)" "(lambda()
					     (if (not (lsp-ui-doc-hide))
						 (lsp-ui-doc-show)
					       (lsp-ui-doc-hide)))" "(lambda()
					     (if not (lsp-ui-doc-hide)
					       (lsp-ui-doc-show)
					       (lsp-ui-doc-hide)))" "(lsp-ui-doc-hide)" "(lsp-ui-doc-show)" "(define-key lsp-ui-mode-map (kbd \"M-k\") 'lsp-ui-doc-show)" "lsp-python-ms-executable" "url" "lsp-python-ms-executable" "lsp-python-ms-dir"))
(setq counsel-M-x-history '(#("^lsp-ui-peek-" 0 13 (ivy-index 1)) #("^com" 0 4 (ivy-index 0)) #("^replace" 0 8 (ivy-index 0)) #("^lsp" 0 4 (ivy-index 0)) #("^" 0 1 (ivy-index 0)) #("^lsp-ui-peek-find" 0 17 (ivy-index 1)) #("^lsp-" 0 5 (ivy-index 0)) #("^toggle" 0 7 (ivy-index 1)) #("^lsp-d" 0 6 (ivy-index 0)) #("^lsp-mode" 0 9 (ivy-index 0)) #("^lsp-ui" 0 7 (ivy-index 0)) #("^lsp-des" 0 8 (ivy-index 0)) #("^lsp-wor" 0 8 (ivy-index 7)) #("^ls" 0 3 (ivy-index 0)) #("^lsp-di" 0 7 (ivy-index 0)) #("^ana" 0 4 (ivy-index 0)) #("^toggle-ui" 0 10 (ivy-index 0)) #("^lsp-python" 0 11 (ivy-index 0)) #("^petmacs/py" 0 11 (ivy-index 0)) #("^petmacs/" 0 9 (ivy-index 34)) #("^pet" 0 4 (ivy-index 0)) #("^petmacs" 0 8 (ivy-index 19)) #("^lsp-doc" 0 8 (ivy-index 0)) #("^toggle-lsp" 0 11 (ivy-index 0)) #("^lsp-ui-doc-hid" 0 15 (ivy-index 0)) #("^co" 0 3 (ivy-index 0)) #("^imenu" 0 6 (ivy-index 1)) #("^lsp-ui-peek-fi" 0 15 (ivy-index 1)) #("^lsp-ui-peek" 0 12 (ivy-index 0)) #("^lsp-ui-imenu" 0 13 (ivy-index 0)) #("^package-install" 0 16 (ivy-index 0)) #("^kill" 0 5 (ivy-index 0)) #("^cust" 0 5 (ivy-index 0)) #("^comp" 0 5 (ivy-index 0)) #("^lsp-p" 0 6 (ivy-index 0)) #("^lsp-desc" 0 9 (ivy-index 0)) #("^lsp-python-ms" 0 14 (ivy-index 0)) #("lsp-s" 0 5 (ivy-index 4)) #("^company-ana" 0 12 (ivy-index 0)) #("^lsp-ivy" 0 8 (ivy-index 1)) #("^xref" 0 5 (ivy-index 0)) #("^petmacs/lsp" 0 12 (ivy-index 8)) #("^lsp-re" 0 7 (ivy-index 0)) #("^lsp-ui-doc" 0 11 (ivy-index 1)) #("^lsp-ui-" 0 8 (ivy-index 1)) #("^lsp-dis" 0 8 (ivy-index 0)) #("^lsp-py" 0 7 (ivy-index 0)) #("^package" 0 8 (ivy-index 2)) #("lsp-ui-" 0 7 (ivy-index 1))))
(setq file-name-history '(#("d:/Emacs/x86_64/bin/" 0 20 (ivy-index 0)) #("f:/test_lsp_root.py" 0 19 (ivy-index 3)) #("f:/.projectile" 0 14 (ivy-index 0)) #("f:/pytest/" 0 10 (ivy-index 0)) "d:/Emacs/x86_64/bin/test-lsp-tobed.py"))
(setq extended-command-history '(#("company-ls" 0 10 (ivy-index 0)) "ivy-mode"))
(setq ivy-history '(#("test" 0 4 (ivy-index 1)) "mspyls" #("torch" 0 5 (ivy-index 0)) "*mspyls::stderr*" #("lsp" 0 3 (ivy-index 4)) "f:/test_lsp_root.py" #("projectile-pro" 0 14 (ivy-index 0)) #("lsp-workspace-ro" 0 16 (ivy-index 0)) #("lsp-work" 0 8 (ivy-index 0)) #("lsp-python-ms-p" 0 15 (ivy-index 0)) #("pytho" 0 5 (ivy-index 0)) #("ui" 0 2 (ivy-index 0)) #("lsp-ui-d" 0 8 (ivy-index 0)) #("lsp-ui-doc" 0 10 (ivy-index 1)) #("ls" 0 2 (ivy-index 1)) #("tes" 0 3 (ivy-index 0)) "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-lsp.el" "d:/Emacs/x86_64/bin/test-lsp-tobed.py" "d:/Emacs/x86_64/bin/test-lsp-tobed.py" #("ligh" 0 4 (ivy-index 5)) "d:/Emacs/x86_64/bin/test-lsp-tobed.py" #(".py" 0 3 (ivy-index 1)) "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-lsp.el" #("dar" 0 3 (ivy-index 0)) "d:/Emacs/x86_64/bin/test-lsp-tobed.py" "*lsp-log*" "mspyls" "d:/Emacs/x86_64/bin/test-lsp-tobed.py" "mspyls" "d:/Emacs/x86_64/bin/test-lsp-tobed.py" #("\\" 0 1 (ivy-index 3)) "*lsp-log*" "*Messages*" "*Help*" "d:/Emacs/x86_64/bin/test-lsp-tobed.py" #("softmax" 0 7 (ivy-index 0)) "f:/test_lsp_root.py" "d:/Emacs/x86_64/bin/test-lsp-tobed.py" #("lsp-python-ms-exec" 0 18 (ivy-index 0)) "d:/Emacs/x86_64/bin/test-lsp-tobed.py" #("lsp-python-ms-dir" 0 17 (ivy-index 0)) "d:/Emacs/x86_64/bin/test-lsp-tobed.py" "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-python-lsp.el" "d:/Emacs/x86_64/bin/test-lsp-tobed.py" #("lsp-python" 0 10 (ivy-index 0)) "*lsp-log*" "d:/Emacs/x86_64/bin/test-lsp-tobed.py" "*lsp-log*"))
(setq evil-jumps-history '((1 "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/init.el") (194 #1="f:/test_lsp_root.py") (201 #1#) (209 #1#) (156 #1#) (141 #1#) (181 #1#) (111 #1#) (101 #1#) (9339 #2="d:/Anaconda3/envs/pytorch/Lib/site-packages/torch/__init__.py") (101 #1#) (9355 #2#) (101 #1#) (911 #2#) (111 #1#) (216 #1#) (194 #1#) (1 #1#) (221 #3="d:/Emacs/x86_64/bin/test-lsp-tobed.py") (204 #3#) (203 #3#) (204 #3#) (173 #3#) (204 #3#) (204 #3#) (931 "d:/Anaconda3/envs/pytorch/Lib/site-packages/torch/nn/modules/__init__.py") (204 #3#) (3072 #4="d:/Anaconda3/envs/pytorch/Lib/site-packages/torch/nn/modules/pooling.py") (204 #3#) (3072 #4#) (204 #3#) (1 #3#) (1 #3#) (5609 #4#) (1 #3#) (3072 #4#) (1 #3#) (151 #4#) (1 #3#) (1 #3#) (203 #5="d:/Emacs/x86_64/bin/test-lsp-tobed.py") (1 #5#) (8162 #6="c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/leader-key-binding.el") (9971 #6#) (6185 #6#) (6227 #6#) (6185 #6#) (6227 #6#) (6188 #6#) (11820 #6#) (5485 #9="c:/Users/peter.linyi/AppData/Roaming/.emacs.d/init.el") (203 #7="d:/Emacs/x86_64/bin/test-lsp-tobed.py") (167 #7#) (3268 #8="d:/Anaconda3/envs/pytorch/Lib/site-packages/sklearn/__init__.py") (443 #8#) (100 #7#) (203 #7#) (203 #7#) (192 #7#) (199 #7#) (115 #7#) (115 #7#) (1 #7#) (1 #9#) (10540 #10="c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-python-lsp.el") (10594 #10#) (10586 #10#) (10517 #10#) (5184 #11="c:/Users/peter.linyi/AppData/Roaming/.emacs.d/init.el") (1 #11#) (94 #12="d:/Emacs/x86_64/bin/test-lsp-tobed.py") (1 #12#) (94 #13="d:/Emacs/x86_64/bin/test-lsp-tobed.py") (1 #13#) (10562 #14="c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-python-lsp.el") (10600 #14#) (1574 #14#) (10473 #14#) (5184 #16="c:/Users/peter.linyi/AppData/Roaming/.emacs.d/init.el") (80 #15="d:/Emacs/x86_64/bin/test-lsp-tobed.py") (94 #15#) (1 #15#) (10849 #14#) (10813 #14#) (10525 #14#) (10424 #14#) (10338 #14#) (10238 #14#) (9699 #14#) (9623 #14#) (9545 #14#) (9470 #14#) (9398 #14#) (9327 #14#) (8980 #14#) (8886 #14#) (2658 #14#) (11501 #14#) (5184 #16#)))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring '(#("json" 0 4 (isearch-case-fold-search nil)) #("imenu" 0 5 (isearch-case-fold-search t)) #("lsp" 0 3 (isearch-case-fold-search t)) #("\\_<leader-key-binding\\_>" 0 24 (isearch-case-fold-search t)) #("dataset" 0 7 (isearch-case-fold-search t)) #("\\_<init-python-lsp\\_>" 0 21 (isearch-case-fold-search nil)) #("defer" 0 5 (isearch-case-fold-search t)) #("python-mode" 0 11 (isearch-case-fold-search t)) #("\\_<init-lsp\\_>" 0 14 (isearch-case-fold-search nil)) #("hook" 0 4 (isearch-case-fold-search t)) #("\\_<lsp-ui-doc-frame-parameters\\_>" 0 33 (isearch-case-fold-search nil)) #("\\_<lsp-ui-doc-focus-frame\\_>" 0 28 (isearch-case-fold-search t)) #(":hook" 0 5 (isearch-case-fold-search t)) #(":command" 0 8 (isearch-case-fold-search t)) #("lsp-mode" 0 8 (isearch-case-fold-search t)) #("\\_<lsp-clients\\_>" 0 17 (isearch-case-fold-search t))))
(setq extended-command-history '(#("company-ls" 0 10 (ivy-index 0)) "ivy-mode"))
