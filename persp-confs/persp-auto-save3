;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer #1="vgg16.py" "f:/deeplearning/learn_keras/vgg16.py" python-mode) (def-buffer "simple_sequential.py" "f:/deeplearning/learn_keras/simple_sequential.py" python-mode) (def-buffer "shared_layers.py" "f:/deeplearning/learn_keras/shared_layers.py" python-mode) (def-buffer "news_models.py" "f:/deeplearning/learn_keras/news_models.py" python-mode) (def-buffer "api_model.py" "f:/deeplearning/learn_keras/api_model.py" python-mode) (def-buffer "losses.py" "d:/Anaconda3/envs/deep/Lib/site-packages/tensorflow/python/keras/losses.py" python-mode) (def-buffer "optimizers.py" "d:/Anaconda3/envs/deep/Lib/site-packages/tensorflow/python/keras/optimizers.py" python-mode) (def-buffer "vgg.py" "f:/deeplearning/learn_keras/vgg.py" python-mode) (def-buffer "mlp_binary.png" "f:/deeplearning/learn_keras/mlp_binary.png" image-mode) (def-buffer "mlp_binary.py" "f:/deeplearning/learn_keras/mlp_binary.py" python-mode) (def-buffer "mlp_softmax.py" "f:/deeplearning/learn_keras/mlp_softmax.py" python-mode) (def-buffer "test_multi.py" "f:/deeplearning/learn_keras/test_multi.py" python-mode) (def-buffer "test_binary.py" "f:/deeplearning/learn_keras/test_binary.py" python-mode) (def-buffer "convolutional.py" "d:/Anaconda3/envs/deep/Lib/site-packages/tensorflow/python/keras/layers/convolutional.py" python-mode) (def-buffer "linear_dl.py" "f:/deeplearning/test/linear_dl.py" python-mode) (def-buffer "vgg.png" "f:/deeplearning/learn_keras/vgg.png" image-mode)) (def-wconf (((min-height . 4) (min-width . 42) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 76) (min-pixel-width . 420) (min-pixel-height-ignore . 57) (min-pixel-width-ignore . 80) (min-pixel-height-safe . 19) (min-pixel-width-safe . 40)) hc (pixel-width . 1920) (pixel-height . 1061) (total-width . 192) (total-height . 56) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 320) (pixel-height . 1061) (total-width . 32) (total-height . 56) (normal-height . 1.0) (normal-width . 0.16666666666666669) (parameters (window-side . left) (window-slot . 0)) (buffer " *Treemacs-Framebuffer-1*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated . t) (point . 501) (start . 106))) (leaf (last . t) (pixel-width . 1600) (pixel-height . 1061) (total-width . 160) (total-height . 56) (normal-height . 1.0) (normal-width . 0.8333333333333334) (buffer #1# (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 26) (start . 1))))) (def-params nil) t nil nil) (def-persp "[p]captcha_break" ((def-buffer "cnn_cpu.py" "f:/deeplearning/captcha_break/cnn_cpu.py" python-mode)) (def-wconf nil) (def-params ((persp-mode-projectile-bridge . t))) nil nil nil) (def-persp "[p].emacs.d" ((def-buffer "treemacs-persist" "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/.cache/treemacs-persist" text-mode)) (def-wconf nil) (def-params ((persp-mode-projectile-bridge . t))) nil nil nil))