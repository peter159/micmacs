;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "NeuralNLP-NeuralClassifier" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/" dired-mode) (def-buffer "multi_label_classification_chinese.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py" python-mode) (def-buffer "classification" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/model/classification/" dired-mode) (def-buffer "trans_api.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py" python-mode) (def-buffer "__init__.py" "/home/linyi/anaconda3/envs/transformers/lib/python3.7/site-packages/transformers/__init__.py" python-mode) (def-buffer "multi-label-classification.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/simpletransformer/multi-label-classification.py" python-mode) (def-buffer "modeling_auto.py" "/home/linyi/anaconda3/envs/transformers/lib/python3.7/site-packages/transformers/modeling_auto.py" python-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 1) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 20) (min-pixel-width-ignore . 20) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (last . t) (pixel-width . 280) (pixel-height . 40) (total-width . 28) (total-height . 2) (normal-height . 1.0) (normal-width . 1.0) (buffer " *company-box-43213300*" (selected . t) (hscroll . 0) (fringes 0 0 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated . t) (point . 1) (start . 1)))) (def-params nil) t nil nil) (def-persp "[p]NeuralNLP-NeuralClassifier" ((def-buffer "predict.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/predict.py" python-mode) (def-buffer "config.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/config.py" python-mode) (def-buffer "train_jlr_test.json" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/conf/train_jlr_test.json" json-mode) (def-buffer "badsectors.txt" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/badsectors.txt" text-mode) (def-buffer "textrcnn.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/model/classification/textrcnn.py" python-mode) (def-buffer "classification_evaluate.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/evaluate/classification_evaluate.py" python-mode) (def-buffer "loss.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/model/loss.py" python-mode) (def-buffer "classification_dataset.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/dataset/classification_dataset.py" python-mode) (def-buffer "train.py" "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/train.py" python-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 60) (min-pixel-width-ignore . 50) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1060) (total-width . 192) (total-height . 53) (normal-height . 1.0) (normal-width . 1.0) (buffer "NeuralNLP-NeuralClassifier" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 2088) (start . 1)) (prev-buffers ("train.py" 1 831) ("train_jlr_test.json" 904 1541) ("config.py" 1 460) ("badsectors.txt" 1 1) ("multi_label_classification_chinese.py" 3360 4154) ("classification" 1 634) ("*Ibuffer*" 1 153) ("classification_evaluate.py" 2746 3744) ("textrcnn.py" 1 783) ("loss.py" 1815 3704) ("classification_dataset.py" 807 1303) ("validation.py" 4143 5127) ("trans_api.py" 137 860) ("__init__.py" 1 982) ("multi-label-classification.py" 218 1061) ("modeling_auto.py" 55493 56127)))) (def-params ((persp-mode-projectile-bridge . t))) nil nil nil) (def-persp "[p]utils" ((def-buffer "validation.py" "/home/linyi/anaconda3/envs/transformers/lib/python3.7/site-packages/sklearn/utils/validation.py" python-mode)) (def-wconf nil) (def-params ((persp-mode-projectile-bridge . t))) nil nil nil))