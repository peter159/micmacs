;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer #1="test.py" "/media/linyi/DataScience/pytorch/multi-label-classification/simpletransformer/test.py" python-mode) (def-buffer "make_json.py" "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py" python-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 60) (min-pixel-width-ignore . 50) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1060) (total-width . 192) (total-height . 53) (normal-height . 1.0) (normal-width . 1.0) (buffer #1# (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 1) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1026) (start . 871)))) (def-params nil) t nil nil) (def-persp "[p]NeuralNLP-NeuralClassifier" ((def-buffer "train_jlr_RCNN.json" "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/conf/train_jlr_RCNN.json" json-mode) (def-buffer "train.py" "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/train.py" python-mode) (def-buffer "textrcnn.py" "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/model/classification/textrcnn.py" python-mode) (def-buffer "output_result.py" "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py" python-mode)) (def-wconf nil) (def-params ((persp-mode-projectile-bridge . t))) nil nil nil) (def-persp "[p].emacs.d" ((def-buffer "treemacs-persist" "/home/linyi/.emacs.d/.cache/treemacs-persist" text-mode)) (def-wconf nil) (def-params ((persp-mode-projectile-bridge . t))) nil nil nil))