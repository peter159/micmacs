(setq company-statistics--scores #s(hash-table size 600 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("LocalOutlierFactor" (((:file #1="f:/pytest/pyod_test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "random" (((:file #55="g:/Projects/Pypkg/stocketl/database/sync_update_holder.py") . 1) (python-mode . 1) (nil . 1) ((:file #25="f:/deeplearning/captcha_break/cnn.py") . 1) ((:keyword "in") . 1) ((:file #2="f:/deeplearning/captcha_break/cnn_gpu.py") . 1)) "json" (((:file #14="g:/Projects/Pypkg/stocketl/database/sync_update_holder.py") . 1) (python-mode . 1) (nil . 1)) "nholder" ((python-mode . 1) (nil . 1)) "nstock" (((:file "g:/Projects/Pypkg/stocketl/crawl/mean_holder_change.py") . 1)) "import" (((:file #11="g:/Projects/Pypkg/stocketl/database/sync_last_update_inner_mysql.py") . 1) ((:keyword "import") . 1) ((:keyword "as") . 2) ((:file #12="g:/Projects/Pypkg/stocketl/database/sync_update_rglret.py") . 1) ((:file #1#) . 1) ((:file #30="f:/pytest/pyod_test_stock.py") . 1) ((:file #13="g:/Projects/Pypkg/stocketl/crawl/temporary.py") . 1) ((:keyword "from") . 30) (python-mode . 10) (nil . 10) ((:file #3="f:/deeplearning/catsdogs/exercise5_self.py") . 1) ((:file #15="f:/pytest/test_featexp.py") . 1) ((:file #41="f:/Kaggle/HomeCredit/data_preprocessing.py") . 1) ((:file #21="f:/deeplearning/test/rnn.py") . 1) ((:file #2#) . 1) ((:file #57="f:/deeplearning/learn_keras/mnist.py") . 1) #84=((:file #33="f:/deeplearning/learn_keras/simple_sequential.py") . 2) #114=((:file #4="f:/deeplearning/learn_keras/vgg16.py") . 5) ((:file #5="f:/deeplearning/learn_keras/mlp_softmax.py") . 1) #198=((:file #7="f:/deeplearning/test/autoencoder.py") . 2) ((:file #45="f:/deeplearning/learn_keras/mlp_binary.py") . 1) #335=((:file #58="f:/deeplearning/test/auto_encoder_tf2a.py") . 5) #341=((:file #8="f:/deeplearning/test/test_tf2b.py") . 6) #386=((:file #61="f:/deeplearning/test/test_api.py") . 1) #411=((:file #9="f:/deeplearning/test/keras_api.py") . 5) ((:file #31="f:/deeplearning/learn_keras/api_model.py") . 1) #542=((:file #10="f:/deeplearning/captcha_break/captcha_tf2.py") . 4) ((:file #6="f:/deeplearning/learn_keras/news_models.py") . 1)) "tensorflow.keras.utils" (((:file #3#) . 1) #76=((:file #22="f:/deeplearning/learn_keras/shared_layers.py") . 1) #123=((:file #4#) . 1) ((:file #5#) . 1) ((:file #28="f:/deeplearning/learn_keras/vgg.py") . 1) ((:file #6#) . 1)) "proportion" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "metrics" (((:keyword "print") . 1) ((:keyword "import") . 1)) "data" (((:keyword "import") . 1)) "Model" (#138=((:file #4#) . 2) #163=((:keyword "in") . 2) #199=((:file #7#) . 2) #367=((:file #8#) . 2) #416=((:file #9#) . 1) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) #631=((:file #10#) . 2)) "get_alist" (((:file #11#) . 1) ((:keyword "import") . 1) ((:file #12#) . 1) (python-mode . 1) (nil . 1)) "Training" (((:file #3#) . 1) ((:keyword "as") . 1) (python-mode . 1) (nil . 1)) "pyod.models" (((:file #1#) . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "kClosed" (((:symbol "State") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "mysql" (((:file #11#) . 1) (python-mode . 1) (nil . 1)) "MySql" (((:file #26="g:/Projects/Pypkg/stockintel2/manage.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1) ((:file #13#) . 1)) "time.sleep" (((:file #34="g:/Projects/Pypkg/stocketl/database/sync_update_holder.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "headers" (((:keyword "in") . 1)) "multiprocessing" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "stocketl.utils" (((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "chunkize_df" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "headers=headers" (((:file "g:/Projects/Pypkg/stocketl/crawl/holder.py") . 1) (python-mode . 1) (nil . 1)) "car_3" ((c++-mode . 1) (nil . 1)) "\".format" (((:file #11#) . 1) ((:file #20="g:/Projects/Pypkg/stocketl/crawl/regular_return.py") . 1) ((:keyword "return") . 1) ((:file #17="g:/Projects/Pypkg/data_preparation/sns/vars_eda.py") . 1) ((:keyword "if") . 1) #130=((:file #4#) . 3) #129=((:keyword "in") . 3) #128=(python-mode . 4) #127=(nil . 4) ((:keyword "print") . 3) #316=((:file #7#) . 3) #370=((:file #37="f:/deeplearning/test/test_tf2b.py") . 1)) "jobid" (((:file #12#) . 1) ((:keyword "with") . 1) ((:file #14#) . 1)) "NULL" (((:file "g:/Projects/Pypkg/stocketl/database/create_db.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "univariate_plotter" (((:file #15#) . 1)) "save_sql_file=False" ((python-mode . 1) (nil . 1)) "code" ((nil . 1)) "b2sum.exe" ((shell-mode . 1) (nil . 1)) "True" ((python-mode . 1) (nil . 1)) "jobs" ((python-mode . 1) (nil . 1)) "__name__" (((:file #23="g:/Projects/Pypkg/stockintel2/manage.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "data.table" ((nil . 2) #661=(inferior-ess-r-mode . 1)) "recommendation" (((:file "f:/pytest/recommendationSystem/recommendation/workflow/cf_workflow.py") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "sklearn" (((:file #15#) . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "../data/ratings.csv" ((nil . 1)) "./wineQualityReds.csv" ((nil . 1)) "redwine" ((inferior-ess-r-mode . 1)) "pointer_to_i" (((:file #16="f:/cpp_proj/udacity/test/getting_obj_back_from_pointer.cpp") . 1)) "point_to_i" (((:file #16#) . 1) ((:keyword "using") . 1) (c++-mode . 1) (nil . 1)) "acidity" (((:file #24="f:/dataAnalysis/Wine/EDA_on_wine_dataset.r") . 1) (ess-r-mode . 1) ((:file #17#) . 1) (python-mode . 1) (nil . 1)) "PrintCarData" (((:symbol "car_1") . 1) ((:symbol "car_2") . 1) ((:symbol "car_3") . 1)) "nulls" (((:keyword "if") . 1)) "start" (((:keyword "def") . 1) ((:file #18="g:/Projects/Pypkg/stocketl/tdx_web/tdx_static_api.py") . 1) (python-mode . 1) (nil . 1)) "rmsprop" (((:keyword "import") . 1)) "get_minute_time_trade" (((:file #18#) . 1) ((:keyword "print") . 1)) "stocketl" (((:file #13#) . 1)) "fdate_string" (((:keyword "lambda") . 1) ((:file #19="g:/Projects/Pypkg/stocketl/tdx_web/tdx_static_api.py") . 1) (python-mode . 1) (nil . 1)) "datetime" (((:keyword "yield") . 1) (python-mode . 1) (nil . 1)) "datetime.today" (((:file #19#) . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "scale_fill_discrete" (((:file #35="g:/Projects/Rpkg/dapre/R/ggplot_vars_eda.r") . 1) (ess-r-mode . 1) (nil . 1)) "input_vecs" (((:file #50="f:/deeplearning/dl_intro/perceptron.py") . 1) (python-mode . 1) (nil . 1)) "require" ((lisp-interaction-mode . 1) (nil . 3) #677=((:file #27="c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-java.el") . 1) #676=((:keyword "lambda") . 1) #675=(emacs-lisp-mode . 2) #685=((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/init.el") . 1) #684=((:keyword "require") . 1)) "datetime.datetime" (((:keyword "yield") . 1) ((:file #20#) . 1)) "successful" (((:file "f:/cpp_proj/udacity/string_with_mixed_type.cpp") . 1) ((:keyword "while") . 1)) "element_text" ((ess-r-mode . 1) (nil . 1)) "LSTM" (((:file #21#) . 1) (python-mode . 1) (nil . 1) ((:file #6#) . 1) ((:file #22#) . 1) ((:keyword "import") . 1)) "PrintBoard" (((:file #42="f:/cpp_proj/udacity/first_week/final_work.cpp") . 1) ((:file #59="f:/cpp_proj/udacity/second_week/Asearch.cpp") . 1) (c++-mode . 1) (nil . 1)) "Manager" (((:file #23#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "legend.text = " (((:file #24#) . 1)) "string" ((c++-mode . 1)) "decode" (((:file #25#) . 1) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) #606=((:file #10#) . 1) #605=((:keyword "in") . 1)) "request" (((:file #26#) . 1) ((:keyword "import") . 1)) ".format" (((:file #12#) . 1) ((:keyword "with") . 1) (python-mode . 1) (nil . 1)) "ggplot_continuous_hist" ((inferior-ess-r-mode . 1)) "use-package" (((:file #29="c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-html.el") . 1) (emacs-lisp-mode . 4) (nil . 4) ((:file #51="c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-c-c++.el") . 1) #666=((:file #27#) . 3) #678=((:keyword "require") . 1)) "dapre::ggplot_continuous_hist" (((:file #24#) . 1) (ess-r-mode . 1) (nil . 1)) "dapre::multiplot.manual" (((:file #24#) . 1) (ess-r-mode . 1) (nil . 1)) "Dropout" (((:file #21#) . 1) ((:file #43="f:/deeplearning/test/linear_dl.py") . 1) #119=((:file #4#) . 1) ((:keyword "import") . 1) ((:file #28#) . 1)) "html-mode" (((:file #29#) . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "nesterov" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "action" (((:file "g:/Projects/Pypkg/stockintel2/templates/index2.html") . 1) (web-mode . 1) (nil . 1)) "distribution" (((:keyword "if") . 1) (nil . 1)) "Convolution2D" (((:file #25#) . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "final_work3.cpp" ((shell-mode . 1) (nil . 1)) "filename" (((:file "g:/Projects/Pypkg/stockintel2/templates/layout.html") . 1) ((:symbol "static") . 1) (web-mode . 1) (nil . 1) ((:keyword "for") . 1)) "./board.csv" (((:file #44="f:/cpp_proj/udacity/first_week/final_work3.cpp") . 1) ((:keyword "auto") . 1)) "stocketl.tdx_web" (((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "get_current_price" (((:file #26#) . 1) (python-mode . 1) (nil . 1)) "stocketl.database" (((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "fstream" ((c++-mode . 1) (nil . 1)) "myfile" (((:file "f:/cpp_proj/udacity/exercise_readFrom_board.cpp") . 1) ((:file #38="f:/cpp_proj/udacity/first_week/formating_printed_board.cpp") . 1) ((:file #52="f:/cpp_proj/udacity/first_week/final_work3.cpp") . 1) ((:file #39="f:/cpp_proj/udacity/second_week/Aseach_mock.cpp") . 1) ((:keyword "while") . 1)) "model" (((:file #25#) . 1) ((:keyword "print") . 1) ((:keyword "import") . 1) ((:file #28#) . 1) (python-mode . 1) (nil . 1)) "facet = " (((:file #24#) . 1) (ess-r-mode . 1) (nil . 1)) "y_pred" (((:keyword "in") . 1)) "major_biz" ((python-mode . 1) (nil . 1)) "names" ((nil . 1)) "scale_fill_brewer" (((:file "g:/Projects/Rpkg/dapre/R/ggplot_vars_eda.r") . 1) (ess-r-mode . 1) (nil . 1)) "get_day_time_trade" (((:file #20#) . 1) ((:file #30#) . 1) (python-mode . 1) (nil . 1)) "ReadBoardFile" (((:keyword "auto") . 1)) "ggtitle" ((ess-r-mode . 1) (nil . 1)) "connectdb" ((python-mode . 1) (nil . 1)) "ipython.exe" ((shell-mode . 1) (nil . 1)) "get_regular_return" (((:file "g:/Projects/Pypkg/stocketl/crawl/__init__.py") . 1) ((:file #12#) . 1)) "TestParseLine" ((c++-mode . 1) (nil . 1)) "period" (((:file #20#) . 1) (python-mode . 1) (nil . 1)) "to_date" (((:file #20#) . 1) (python-mode . 1) (nil . 1)) "perd_list" (((:file #20#) . 1) (python-mode . 1) (nil . 1)) "sns.FacetGrid" (((:keyword "print") . 1) ((:file #17#) . 1) (python-mode . 1) (nil . 1)) "seaborn" (((:file #17#) . 1) (python-mode . 1) (nil . 1)) "type" (((:file #18#) . 1) (python-mode . 1) (nil . 1)) "__wrap_get_security_bars" (((:file #18#) . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "get_month_time_trade" (((:file #20#) . 1)) "get_season_time_trade" ((python-mode . 1) (nil . 1)) "get_week_time_trade" (((:keyword "import") . 1) ((:file #20#) . 1)) "datestamp" (((:keyword "yield") . 1) ((:file #12#) . 1)) "return" (((:file #20#) . 1) (python-mode . 1)) "g.map" (((:file #17#) . 1) (python-mode . 1) (nil . 1)) "category" (((:file #17#) . 1) (python-mode . 1) (nil . 1)) "Input" (#137=((:file #4#) . 2) #412=((:file #9#) . 2) ((:file #31#) . 1) ((:file #22#) . 1)) "self.characters" (((:file #2#) . 1) (python-mode . 1) (nil . 1)) "uppct" (((:file #12#) . 1)) "lambda" (((:keyword "self") . 1) (nil . 2) #674=((:file #27#) . 1) #673=((:keyword "use-package") . 1) #672=(emacs-lisp-mode . 1)) "kEmpty" (((:keyword "if") . 1) ((:file #40="f:/cpp_proj/udacity/second_week/Asearch_from_start.cpp") . 1) ((:symbol "State") . 1) (c++-mode . 1) (nil . 1)) "split_data" (((:file #3#) . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "core_ret" (((:file #12#) . 1) (python-mode . 1) (nil . 1)) "palette" (((:file #17#) . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "rglrtn" (((:file #12#) . 1) (python-mode . 1) (nil . 1)) "sigmoid" (#65=((:file #22#) . 1) ((:file #6#) . 1) (python-mode . 1) (nil . 1)) "all_proxies_crawled" (((:file #32="g:/Projects/Pypkg/stocketl/agent/ipagent.py") . 1) (python-mode . 1) (nil . 1)) "proxies" (((:file #32#) . 1) ((:keyword "print") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "update_list_finance_multi_process" (((:file #12#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "tf.keras.layers.Dense" (((:file #3#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) #523="Adadelta" (#527=((:file #62="f:/deeplearning/test/auto_encoder_tf2a.py") . 1) #526=((:keyword "import") . 2) #525=(python-mode . 3) #524=(nil . 3) #530=((:file #54="f:/deeplearning/test/autoencoder.py") . 2) #531=((:keyword "print") . 1)) "code2symbol" (((:file "g:/Projects/Pypkg/stocketl/crawl/temporary.py") . 1) (python-mode . 1) (nil . 1)) "verified_proxies" (((:file #32#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "proxies=proxies" ((python-mode . 1) (nil . 1)) "crossentropy" (#460=((:file #9#) . 1)) #100="activation=tf.activation" (#104=((:file #33#) . 1) #103=((:keyword "import") . 1) #102=(python-mode . 1) #101=(nil . 1)) "pool_size" ((python-mode . 1) (nil . 1)) "train_datagen" (((:file #3#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "MinMaxScaler" (((:file #30#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "dapre::ggplot_factor_barplot" (((:file #24#) . 1) (ess-r-mode . 1) (nil . 1)) "itchatbot/" ((inferior-python-mode . 1) (nil . 1)) "shuffle" (((:file #34#) . 1) (python-mode . 2) (nil . 2) #280=((:file #7#) . 1) #279=((:keyword "as") . 1)) "get_trend_stats" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "ggplot_continuous_corrplot" ((nil . 1)) "get_core_finance" (((:file #13#) . 1) (python-mode . 1) (nil . 1)) "library" (((:file "f:/pytest/dataAnalysis/EDA_on_wine_dataset.r") . 1) #638=((:file #63="e:/PersonalProjects/NikeSegmentation(201906)/segmentation/0726/cluser.r") . 2) #637=(ess-r-mode . 2) #636=(nil . 2)) "stocketl.crawl" (((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "namespace" (((:keyword "using") . 1) (c++-mode . 1) (nil . 1)) "quality" (((:file #24#) . 1) ((:keyword "print") . 1) ((:file #17#) . 1) ((:keyword "else") . 1) (python-mode . 1)) "mysql.sql" (((:file #13#) . 1) (python-mode . 1) (nil . 1)) "guide_legend" (((:file #35#) . 1) (ess-r-mode . 1) (nil . 1)) "dummy_na" (((:file #36="g:/Projects/Pypkg/data_preparation/release_inputs/base.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "more_nulls" (((:file #36#) . 1) (python-mode . 1) (nil . 1)) "citric" (((:keyword "print") . 1) (nil . 1)) "manage.py" ((shell-mode . 1) (nil . 1)) "sql_statment" (((:file #13#) . 1) (python-mode . 1) (nil . 1)) "fixed" (((:file #24#) . 1) (ess-r-mode . 1) ((:file #17#) . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "help.exe" ((shell-mode . 2) (nil . 2)) "volatile" (((:file #24#) . 1) (ess-r-mode . 1)) "datacopy.exe" ((shell-mode . 1) (nil . 1)) #371="1000" (#375=((:file #37#) . 1) #374=((:keyword "print") . 1) #373=(python-mode . 1) #372=(nil . 1)) "update_single_stock_info" (((:file "g:/Projects/Pypkg/stockintel2/manage.py") . 1) (python-mode . 1) (nil . 1)) "my_dataset" (((:file "f:/dataAnalysis/EnronAnalyssis/enronAnalysis.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "push_back" (((:file #38#) . 1) ((:file #53="f:/cpp_proj/udacity/second_week/Asearch.cpp") . 1) ((:file #39#) . 1) ((:symbol "openlist") . 1) ((:keyword "return") . 1) ((:file #40#) . 1) ((:symbol "row") . 1) (c++-mode . 1) (nil . 1)) "pd.read_csv" ((python-mode . 1) (nil . 1) ((:file #41#) . 1) ((:keyword "import") . 1)) "ParseLine" (((:file #38#) . 1) ((:file #42#) . 1) (c++-mode . 1) (nil . 1)) "MaxPooling2D" (((:file #28#) . 1) (python-mode . 1) (nil . 1)) "col_wrap" (((:keyword "print") . 1) ((:keyword "if") . 1) ((:file #17#) . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "plt.hist" (((:keyword "print") . 1) ((:file #17#) . 1) (python-mode . 1) (nil . 1)) "eglot-mode-map" (((:keyword "setq") . 1)) "index_col" ((python-mode . 1) (nil . 1)) #614="input_tensor" (#618=((:file #10#) . 1) #617=((:keyword "import") . 1) #616=(python-mode . 1) #615=(nil . 1)) "testing" (((:file #3#) . 1) ((:symbol "dogs") . 1) (python-mode . 1) (nil . 1)) "facet" (((:keyword "if") . 1) ((:file #17#) . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "yield" (((:file #20#) . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "sns_continuous_hist" (((:file "g:/Projects/Pypkg/data_preparation/sns/__init__.py") . 1) ((:file "g:/Projects/Pypkg/data_preparation/test/test.py") . 1) ((:file #41#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "self.n_len" (((:file #2#) . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "sns.distplot" (((:keyword "else") . 1)) "keras.utils" (((:file #43#) . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "concatenate" (((:file #6#) . 1) ((:file #22#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) #475="GlobalMaxPool2D" (#479=((:file #47="f:/deeplearning/test/keras_api.py") . 2) #478=((:keyword "import") . 2) #477=(python-mode . 2) #476=(nil . 2)) "tf.keras" (((:file #3#) . 1) ((:file #21#) . 1) (python-mode . 3) (nil . 3) #87=((:file #33#) . 1) #86=((:keyword "as") . 1) #323=((:file #7#) . 1) #322=((:keyword "print") . 1)) "_testify_proxies_one_process" (((:keyword "print") . 1) ((:file #14#) . 1) ((:keyword "if") . 1)) "ReadFromFile" (((:file #44#) . 1)) "json.dump" (((:file #32#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "proxy" (((:file #32#) . 1) ((:file "g:/Projects/Pypkg/stocketl/crawl/holder.py") . 1) ((:file #14#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "history" (((:file #3#) . 1) ((:keyword "as") . 1) (python-mode . 1) (nil . 1)) "validation_datagen" (((:file #3#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "target_size" (((:file #3#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "ls.exe" ((shell-mode . 1) (nil . 1)) "all_cols" (((:file #36#) . 1) (python-mode . 1) (nil . 1)) "height" (((:file #25#) . 1) (python-mode . 1) (nil . 1) ((:file #2#) . 1) ((:keyword "self") . 1)) "more_nulls_float" (((:file #36#) . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "variable" (((:keyword "const") . 1)) "decrease" (((:file "g:/Projects/Pypkg/stockintel2/manage.py") . 1) ((:keyword "return") . 1) (python-mode . 1)) "RouteModel" (((:file "f:/cpp_proj/udacity/route_planning/src/route_model.h") . 1) (c-mode . 1) (nil . 1)) "border" (((:file #46="g:/Projects/Pypkg/stockintel2/templates/stock_num_decrease.html") . 1) (web-mode . 1) (nil . 1)) "batch_size" (((:keyword "def") . 1) ((:file #3#) . 1) ((:keyword "print") . 1) ((:file #2#) . 1) ((:file #43#) . 1) ((:keyword "as") . 2) ((:file #5#) . 1) #278=((:file #7#) . 1) ((:file #45#) . 1) ((:file #28#) . 1) ((:keyword "import") . 1)) "collapse" (((:file #46#) . 1) (web-mode . 1) (nil . 1)) #495="Convolution2DTranspose" (#499=((:file #47#) . 1) #498=((:keyword "import") . 1) #497=(python-mode . 1) #496=(nil . 1)) "salt" (((:file #24#) . 1) (ess-r-mode . 1) (nil . 1)) "characters" (((:keyword "print") . 3) ((:keyword "in") . 1) ((:keyword "self") . 1) ((:file #2#) . 1) ((:keyword "import") . 1) (python-mode . 4) (nil . 4) #565=((:file #10#) . 3) #598=((:keyword "return") . 1)) "iostream" (((:symbol "nil") . 1) ((:file #49="f:/cpp_proj/udacity/first_week/parse_line_from_file.cpp") . 1) (nil . 1)) "SGD" (((:file #5#) . 1) ((:file #28#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "using" (((:file #48="f:/cpp_proj/udacity/vectors.cpp") . 1) (c++-mode . 1) (nil . 1)) "generator" (((:file #25#) . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "residual" (((:file #24#) . 1) (ess-r-mode . 1) (nil . 1)) "cout" (((:keyword "if") . 1) ((:file "f:/cpp_proj/udacity/process_string.cpp") . 1)) "vector" (((:file #48#) . 1) ((:file #49#) . 1) ((:file "f:/cpp_proj/udacity/second_week/Asearch_from_start.cpp") . 1) ((:keyword "return") . 1)) "density" (((:file #24#) . 1) (ess-r-mode . 1) (nil . 1)) "alcohol" (((:file #24#) . 1) (ess-r-mode . 1) (nil . 1)) "keras.utils.vis_utils" (((:file #25#) . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "geom_density" (((:file #24#) . 1) (ess-r-mode . 1) (nil . 1)) "plot_model" (((:file #25#) . 1) ((:keyword "import") . 3) (python-mode . 4) (nil . 4) ((:file #3#) . 1) #77=((:file #22#) . 2) #124=((:file #4#) . 2) #174=((:keyword "in") . 1) ((:file #5#) . 1) ((:file #45#) . 1) ((:file #28#) . 1) #427=((:file #9#) . 1) ((:file #6#) . 1)) "delta" (((:file #50#) . 1) (python-mode . 1) (nil . 1)) "labels" (((:file #50#) . 1) (python-mode . 1) (nil . 1) ((:file #56="f:/deeplearning/learn_keras/test_multi.py") . 1)) "loss" (((:keyword "print") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "categorical" (((:keyword "import") . 1) #459=((:file #9#) . 1)) #422="tensorflow.python.keras.utils" (#426=((:file #9#) . 1) #425=((:keyword "from") . 2) #424=(python-mode . 2) #423=(nil . 2) #572=((:file #10#) . 1)) "and_perception" (((:file #50#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "x_test" (#270=((:file #7#) . 6) #269=((:keyword "as") . 6) #268=(python-mode . 4) #267=(nil . 4)) "Conv2D" (((:file #43#) . 1) ((:keyword "import") . 11) (python-mode . 11) (nil . 11) #117=((:file #4#) . 6) #125=((:keyword "in") . 2) ((:keyword "as") . 1) #473=((:file #47#) . 6) #632=((:file #10#) . 1)) "eglot-ensure" (((:file #51#) . 1)) "define-key" ((emacs-lisp-mode . 1) (nil . 1)) "c++-mode-map" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-eglot.el") . 1) ((:keyword "use-package") . 1) ((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-c-c++.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "main_input" (((:file #6#) . 1) (python-mode . 1) (nil . 1)) "xref--find-definitions" ((emacs-lisp-mode . 1) (nil . 1)) "NameError" (#150=((:file #4#) . 1)) "TESTING" (((:file #3#) . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "shape" (#221=((:file #7#) . 1) ((:file #6#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "Direction" (((:file "f:/cpp_proj/udacity/first_week/exercise_enum.cpp") . 1) ((:keyword "enum") . 1) (c++-mode . 1) (nil . 1)) "training" (((:keyword "print") . 1)) "col=facet" (((:file #17#) . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "kObstacle" (((:file #38#) . 1) ((:file #42#) . 1) ((:file "f:/cpp_proj/udacity/first_week/final_work2.cpp") . 1) ((:file #52#) . 1) ((:file #53#) . 1) ((:file #39#) . 1) ((:keyword "else") . 1) (c++-mode . 1) (nil . 1)) "input" (((:file #43#) . 1) ((:keyword "import") . 1)) #532="optimizer=adadelta" (#536=((:file #54#) . 1) #535=((:keyword "print") . 1) #534=(python-mode . 1) #533=(nil . 1)) "Activation" (#118=((:file #4#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "auxiliary_input" (((:file #6#) . 1) (python-mode . 1) (nil . 1)) "iostream\"" ((c++-mode . 1) (nil . 1)) "validation_data" (((:keyword "print") . 1) (python-mode . 2) (nil . 2) #282=((:file #7#) . 1) #281=((:keyword "as") . 1)) "class_mode" (((:file #3#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "outfile" (((:keyword "if") . 1)) "models" (((:file #43#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "stocketl.agent" (((:file #55#) . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "random.choice" (((:file #55#) . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "kOBstacle" (((:file #40#) . 1) ((:symbol "State") . 1) (c++-mode . 1) (nil . 1)) "begin" ((c++-mode . 1) (nil . 1)) #88="tf.keras.Sequential" (#92=((:file #33#) . 1) #91=((:keyword "as") . 1) #90=(python-mode . 1) #89=(nil . 1)) "get_grouped_data" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "numpy" (((:keyword "import") . 2) (python-mode . 2) (nil . 2) #554=((:file #10#) . 1)) "one_annc_statement" (((:file #13#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "np.random.random" (((:keyword "as") . 1) (python-mode . 3) (nil . 3) #382=((:file #37#) . 2) #381=((:keyword "print") . 2)) "one_holder_statement" (((:file #13#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "to_categorical" (((:file #56#) . 1) ((:file #5#) . 1) ((:file #28#) . 1) (python-mode . 1) (nil . 1)) "car_vect" (((:file "f:/cpp_proj/udacity/test/scalingUp.cpp") . 1) (c++-mode . 1) (nil . 1)) "ImageCaptcha" (((:file #25#) . 1) (python-mode . 2) (nil . 2) ((:file #2#) . 1) #549=((:file #10#) . 1) #548=((:keyword "import") . 1)) "width" (((:file #25#) . 1) (python-mode . 1) (nil . 1) ((:file #2#) . 1) ((:keyword "self") . 1)) "dtype=np.uint8" (((:file #25#) . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "vectors.cpp" ((shell-mode . 1) (nil . 1)) "random_str" (((:file #25#) . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1) ((:file #2#) . 1)) "np.argmax" (((:keyword "in") . 1)) "momentum" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "./a.exe" ((shell-mode . 1) (nil . 1)) "plt.imshow" (((:file #25#) . 1) (python-mode . 2) (nil . 2) #604=((:file #10#) . 1) #603=((:keyword "in") . 1)) "model.compile" (((:file #43#) . 1) ((:keyword "print") . 1)) "optimizer" ((python-mode . 1) (nil . 1)) "score" (((:file #5#) . 1) ((:file #28#) . 1)) "final_work2.cpp" ((shell-mode . 1) (nil . 1)) "binary" ((python-mode . 1) (nil . 1)) "Image" (((:file #25#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "show_shapes" (#83=((:file #22#) . 1) #181=((:file #4#) . 1) #180=((:keyword "in") . 1) ((:file #45#) . 1) ((:file #6#) . 1) (python-mode . 1) (nil . 1)) "tqdm" (((:file #25#) . 1) (python-mode . 1) (nil . 1)) "batch_num" (((:file #25#) . 1) (python-mode . 1) (nil . 1)) "batch_acc" (((:file #25#) . 1) (python-mode . 1) (nil . 1)) "Dense" (((:keyword "print") . 1) #121=((:file #4#) . 3) ((:file #5#) . 1) #194=((:file #7#) . 1) ((:file #45#) . 1) #369=((:file #8#) . 1) ((:keyword "as") . 1) #413=((:file #9#) . 2) ((:file #31#) . 1) ((:file #22#) . 1) ((:keyword "import") . 1)) "tensorflow.keras.models" (#113=((:file #4#) . 1) #197=((:file #7#) . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "self.weights" (((:file #50#) . 1) ((:keyword "lambda") . 1) (python-mode . 1) (nil . 1)) "Sequential" (((:file #21#) . 1) ((:file #57#) . 1) ((:file #56#) . 1) #115=((:file #4#) . 2) ((:file #5#) . 1) ((:file #45#) . 1) ((:keyword "import") . 3) (python-mode . 2) (nil . 2) #368=((:file #8#) . 1) ((:file #28#) . 1) #580=((:file #10#) . 1)) "tensorflow.keras.layers" (#116=((:file #4#) . 2) #193=((:file #7#) . 1) ((:file #28#) . 1) ((:file #22#) . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "x_train" (#266=((:file #7#) . 8) #265=((:keyword "as") . 8) #264=(python-mode . 7) #263=(nil . 7) #463=((:file #9#) . 1) #462=((:keyword "import") . 1)) "input_vec" (((:file #50#) . 1) (python-mode . 1) (nil . 1)) "label" (((:file #41#) . 1) ((:keyword "import") . 1)) "decay" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "d:/ccls/" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-c-c++.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "tensorflow" (((:keyword "from") . 23) ((:file #3#) . 1) ((:keyword "import") . 3) (python-mode . 5) (nil . 5) ((:file #2#) . 1) ((:file #57#) . 1) #85=((:file #33#) . 2) #111=((:file #4#) . 5) #195=((:file #7#) . 4) #329=((:file #58#) . 2) #343=((:file #8#) . 7) ((:file #28#) . 1) #407=((:file #9#) . 5) ((:file #31#) . 1) #571=((:file #10#) . 3) ((:file #6#) . 1)) "tensorflow.keras" (((:keyword "from") . 5) (python-mode . 5) (nil . 5) ((:file #21#) . 1) ((:file #57#) . 1) #93=((:file #33#) . 1) #112=((:file #4#) . 5) #196=((:file #7#) . 2) ((:file #28#) . 1) ((:file #6#) . 1)) "parse_line_from_file.cpp" ((shell-mode . 1) (nil . 1)) "ImageDataGenerator" (((:keyword "print") . 1)) "copyfile" (((:keyword "in") . 1)) "os.listdir" (((:keyword "print") . 1)) "categorical_crossentropy" (((:file #31#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "n_class" (((:file #2#) . 1) (python-mode . 2) (nil . 2) #625=((:file #10#) . 1) #624=((:keyword "in") . 1)) "CaptchaSequence" (((:keyword "import") . 1) #602=((:file #10#) . 1) #601=((:keyword "in") . 1) #600=(python-mode . 1) #599=(nil . 1)) "self.batch_size" (((:keyword "self") . 1)) "shuffled_set" (((:file #3#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "zip_ref" (((:file #3#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "enumerate" (((:file #2#) . 1) ((:keyword "in") . 3) (python-mode . 3) (nil . 3) #597=((:file #10#) . 2)) "softmax" (#110=((:file #33#) . 1) ((:keyword "import") . 1)) #480="inputs=encode_input" (#484=((:file #47#) . 1) #483=((:keyword "import") . 1) #482=(python-mode . 1) #481=(nil . 1)) "split_size" (((:file #3#) . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "steps" (((:file #2#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) #511="encode_model" (#515=((:file #47#) . 1) #514=((:keyword "import") . 1) #513=(python-mode . 1) #512=(nil . 1)) "RMSprop" (#453=((:file #9#) . 1)) #560="string.ascii_uppercase" (#564=((:file #10#) . 1) #563=((:keyword "import") . 1) #562=(python-mode . 1) #561=(nil . 1)) "auxiliary_output" (((:file #6#) . 1) (python-mode . 1) (nil . 1)) #573="Sequence" (#577=((:file #10#) . 2) #576=((:keyword "import") . 1) #575=(python-mode . 2) #574=(nil . 2) #581=((:keyword "class") . 1)) "activation" (((:file #3#) . 1) (python-mode . 10) (nil . 10) ((:file #43#) . 1) #64=((:file #22#) . 1) ((:file #57#) . 1) #99=((:file #33#) . 2) ((:file #56#) . 1) #126=((:file #4#) . 6) #144=((:keyword "import") . 1) #205=((:file #7#) . 2) ((:file #28#) . 1) ((:keyword "as") . 1) #415=((:file #9#) . 1) ((:keyword "in") . 1)) #566="定义数据生成器" (#570=((:file #10#) . 1) #569=((:keyword "print") . 1) #568=(python-mode . 1) #567=(nil . 1)) "final_work.cpp" ((shell-mode . 1) (nil . 1)) #609="tensorflow.python.layers" (#613=((:file #10#) . 1) #612=((:keyword "from") . 1) #611=(python-mode . 1) #610=(nil . 1)) "rescale" (((:file #3#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "epochs" (((:keyword "as") . 2) (python-mode . 1) (nil . 1) ((:file #43#) . 1) ((:keyword "print") . 2) #277=((:file #7#) . 1) #383=((:file #37#) . 1) ((:keyword "import") . 1)) "matplotlib" (((:file #3#) . 1) #553=((:file #10#) . 2) #552=((:keyword "import") . 2) #551=(python-mode . 2) #550=(nil . 2)) "model.evaluate" (((:keyword "import") . 2) (python-mode . 2) (nil . 2) #464=((:file #9#) . 1)) "test_write.csv" ((shell-mode . 1) (nil . 1)) "trX" (((:file #43#) . 1) (python-mode . 1) (nil . 1)) "Validation" (((:file #3#) . 1) ((:keyword "as") . 1) (python-mode . 1) (nil . 1)) "weights" (((:keyword "import") . 1)) #679=":preface" (#683=((:file #27#) . 1) #682=((:keyword "use-package") . 1) #681=(emacs-lisp-mode . 1) #680=(nil . 1)) "accuracy" (((:keyword "import") . 1) #461=((:file #9#) . 1)) "../first_week/" (((:file #59#) . 1) ((:keyword "auto") . 1) (c++-mode . 1) (nil . 1)) "../first_week/board.csv" (((:file #59#) . 1) ((:keyword "auto") . 1) (c++-mode . 1) (nil . 1)) #712="static" (#716=((:file #60="f:/JavaTest/day01/HelloWorld.java") . 2) #715=((:keyword "public") . 2) #714=(java-mode . 2) #713=(nil . 2)) #94="layers.Dense" (#98=((:file #33#) . 2) #97=((:keyword "import") . 2) #96=(python-mode . 2) #95=(nil . 2)) "tweet_a" (((:file #22#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) #78="./shared_layers.py" (#82=((:file #22#) . 1) #81=((:keyword "import") . 1) #80=(python-mode . 1) #79=(nil . 1)) "on_grid_x" (((:file #40#) . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "featexp" (((:file #15#) . 1) ((:file #41#) . 1)) "target_col" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "features_list" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "pandas" ((python-mode . 1) (nil . 1)) "sklearn.model_selection" (((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "train_test_split" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "DataFrame" (((:file #36#) . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "get_nonull_dummy_data" (((:file #41#) . 1)) "np.zeros" (((:file #25#) . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) #164="inuts=img_input" (#168=((:file #4#) . 1) #167=((:keyword "in") . 1) #166=(python-mode . 1) #165=(nil . 1)) #200="encoding_dim" (#204=((:file #7#) . 2) #203=((:keyword "import") . 2) #202=(python-mode . 2) #201=(nil . 2)) "./demo/data/" (((:file #41#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "./demo/" (((:file #41#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "y_test" (((:file #45#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "MaxPool2D" (((:file #43#) . 1) ((:keyword "import") . 4) (python-mode . 6) (nil . 6) #122=((:file #4#) . 4) #131=((:keyword "in") . 2) #474=((:file #47#) . 2)) "Flatten" (((:file #43#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1) #120=((:file #4#) . 2) #162=((:keyword "in") . 1) ((:file #28#) . 1)) "model.add" ((python-mode . 1) (nil . 1)) #105="activation=tf.nn.activation" (#109=((:file #33#) . 1) #108=((:keyword "import") . 1) #107=(python-mode . 1) #106=(nil . 1)) #704="HelloWorld.class" (#706=(shell-mode . 2) #705=(nil . 2)) #71="outputs=prediction" (#75=((:file #22#) . 1) #74=((:keyword "import") . 1) #73=(python-mode . 1) #72=(nil . 1)) #722="HelloWorld" (#726=((:file #60#) . 2) #725=((:keyword "static") . 1) #724=(java-mode . 2) #723=(nil . 2) #732=((:keyword "class") . 1)) #66="merged_vector" (#70=((:file #22#) . 1) #69=((:keyword "import") . 1) #68=(python-mode . 1) #67=(nil . 1)) "linear" (((:file #43#) . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) #132="strides" (#136=((:file #4#) . 2) #135=((:keyword "in") . 1) #134=(python-mode . 2) #133=(nil . 2) #156=((:keyword "import") . 1)) #139="shape=input_shape" (#143=((:file #4#) . 1) #142=((:keyword "import") . 1) #141=(python-mode . 1) #140=(nil . 1)) #145="img_input" (#149=((:file #4#) . 1) #148=((:keyword "import") . 1) #147=(python-mode . 1) #146=(nil . 1)) #151="block1" (#155=((:file #4#) . 1) #154=((:keyword "import") . 1) #153=(python-mode . 1) #152=(nil . 1)) #157="padding" (#161=((:file #4#) . 1) #160=((:keyword "in") . 1) #159=(python-mode . 1) #158=(nil . 1)) #169="model.summary" (#173=((:file #4#) . 1) #172=((:keyword "in") . 1) #171=(python-mode . 1) #170=(nil . 1)) #175="vgg16" (#179=((:file #4#) . 2) #178=((:keyword "in") . 1) #177=(python-mode . 2) #176=(nil . 2) #187=((:keyword "import") . 1)) #182="tensorflow.keras.applications" (#186=((:file #4#) . 1) #185=((:keyword "from") . 1) #184=(python-mode . 1) #183=(nil . 1)) #188="VGG16" (#192=((:file #4#) . 1) #191=((:keyword "import") . 1) #190=(python-mode . 1) #189=(nil . 1)) #206="input_img" (#210=((:file #7#) . 3) #209=((:keyword "import") . 3) #208=(python-mode . 3) #207=(nil . 3)) #211="encoded" (#215=((:file #7#) . 3) #214=((:keyword "import") . 2) #213=(python-mode . 3) #212=(nil . 3) #283=((:keyword "as") . 1)) #216="decoded" (#220=((:file #7#) . 2) #219=((:keyword "import") . 1) #218=(python-mode . 2) #217=(nil . 2) #294=((:keyword "as") . 1)) #222="autoencoder" (#226=((:file #7#) . 3) #225=((:keyword "import") . 4) #224=(python-mode . 5) #223=(nil . 5) #276=((:keyword "as") . 1) #510=((:file #47#) . 2)) #227="autoencoder.layers" (#231=((:file #7#) . 1) #230=((:keyword "import") . 1) #229=(python-mode . 1) #228=(nil . 1)) #232="encoded_input" (#236=((:file #7#) . 2) #235=((:keyword "import") . 2) #234=(python-mode . 2) #233=(nil . 2)) #237="decoder_layer" (#241=((:file #7#) . 1) #240=((:keyword "import") . 1) #239=(python-mode . 1) #238=(nil . 1)) #242="autoencoder.compile" (#246=((:file #7#) . 1) #245=((:keyword "import") . 1) #244=(python-mode . 1) #243=(nil . 1)) #247="tensorflow.keras.datasets" (#251=((:file #7#) . 1) #250=((:keyword "from") . 1) #249=(python-mode . 1) #248=(nil . 1)) #252="mnist" (#256=((:file #7#) . 2) #255=((:keyword "import") . 3) #254=(python-mode . 5) #253=(nil . 5) #257=((:keyword "as") . 1) #385=((:file #61#) . 1) #384=((:keyword "from") . 1) #438=((:file #9#) . 2)) #258="mnist.load_data" (#262=((:file #7#) . 1) #261=((:keyword "as") . 1) #260=(python-mode . 2) #259=(nil . 2) #440=((:file #9#) . 1) #439=((:keyword "import") . 1)) #271="float32" (#275=((:file #7#) . 1) #274=((:keyword "as") . 1) #273=(python-mode . 2) #272=(nil . 2) #442=((:file #9#) . 1) #441=((:keyword "import") . 1)) #284="encoder" (#288=((:file #7#) . 1) #287=((:keyword "as") . 1) #286=(python-mode . 1) #285=(nil . 1)) #289="encoder.predict" (#293=((:file #7#) . 1) #292=((:keyword "as") . 1) #291=(python-mode . 1) #290=(nil . 1)) #295="decoder" (#299=((:file #7#) . 1) #298=((:keyword "as") . 1) #297=(python-mode . 1) #296=(nil . 1)) #300="decoder.predict" (#304=((:file #7#) . 1) #303=((:keyword "as") . 1) #302=(python-mode . 1) #301=(nil . 1)) #305="encoded_imgs" (#309=((:file #7#) . 1) #308=((:keyword "as") . 1) #307=(python-mode . 1) #306=(nil . 1)) #310="platform" (#314=((:file #7#) . 3) #313=((:keyword "import") . 2) #312=(python-mode . 6) #311=(nil . 6) #315=((:keyword "print") . 4) #342=((:file #8#) . 3)) #317="platform.platform" (#321=((:file #7#) . 1) #320=((:keyword "print") . 3) #319=(python-mode . 3) #318=(nil . 3) #354=((:file #8#) . 2)) #324="tf.keras.__version__" (#328=((:file #7#) . 1) #327=((:keyword "print") . 1) #326=(python-mode . 1) #325=(nil . 1)) #330="tensorflow.python.keras" (#334=((:file #58#) . 1) #333=((:keyword "from") . 10) #332=(python-mode . 10) #331=(nil . 10) #355=((:file #8#) . 4) #409=((:file #9#) . 3) #529=((:file #54#) . 1) #607=((:file #10#) . 1)) #336="tensorflow.python.keras.layers" (#340=((:file #58#) . 1) #339=((:keyword "from") . 5) #338=(python-mode . 5) #337=(nil . 5) #356=((:file #8#) . 2) #410=((:file #9#) . 1) #578=((:file #10#) . 1)) #344="version" (#348=((:file #8#) . 2) #347=((:keyword "print") . 2) #346=(python-mode . 2) #345=(nil . 2)) #349="tf.__version__" (#353=((:file #8#) . 2) #352=((:keyword "print") . 2) #351=(python-mode . 2) #350=(nil . 2)) #357="tensorflow.python" (#361=((:file #8#) . 3) #360=((:keyword "from") . 11) #359=(python-mode . 11) #358=(nil . 11) #408=((:file #9#) . 5) #516=((:file #62#) . 1) #528=((:file #54#) . 1) #608=((:file #10#) . 1)) #362="tensorflow.python.keras.models" (#366=((:file #8#) . 2) #365=((:keyword "from") . 5) #364=(python-mode . 5) #363=(nil . 5) #414=((:file #9#) . 1) #579=((:file #10#) . 2)) #376="np.random" (#380=((:file #37#) . 2) #379=((:keyword "print") . 2) #378=(python-mode . 2) #377=(nil . 2)) #387="MNIST" (#391=((:file #61#) . 2) #390=((:keyword "import") . 2) #389=(python-mode . 2) #388=(nil . 2)) #392="path" (#396=((:file #61#) . 1) #395=((:keyword "import") . 1) #394=(python-mode . 1) #393=(nil . 1)) #397="data.train_images" (#401=((:file #61#) . 1) #400=((:keyword "import") . 1) #399=(python-mode . 1) #398=(nil . 1)) #402="data.load_training" (#406=((:file #61#) . 1) #405=((:keyword "import") . 1) #404=(python-mode . 1) #403=(nil . 1)) #417="outputs=outputs" (#421=((:file #9#) . 1) #420=((:keyword "import") . 1) #419=(python-mode . 1) #418=(nil . 1)) #428="tensorflow.python.keras.datasets" (#432=((:file #9#) . 2) #431=((:keyword "from") . 2) #430=(python-mode . 2) #429=(nil . 2)) #433="tensorflow.python.keras.datasets.mnist" (#437=((:file #9#) . 1) #436=((:keyword "from") . 1) #435=(python-mode . 1) #434=(nil . 1)) #443="from" (#447=((:file #9#) . 1) #446=((:keyword "import") . 1) #445=(python-mode . 1) #444=(nil . 1)) #448="tensorflow.python.keras.optimizers" (#452=((:file #9#) . 1) #451=((:keyword "from") . 2) #450=(python-mode . 2) #449=(nil . 2) #517=((:file #62#) . 1)) #454="optimizer=RMSprop" (#458=((:file #9#) . 1) #457=((:keyword "import") . 1) #456=(python-mode . 1) #455=(nil . 1)) #465="test_scores" (#469=((:file #9#) . 1) #468=((:keyword "print") . 1) #467=(python-mode . 1) #466=(nil . 1)) #470="yaml2obj.exe" (#472=(shell-mode . 2) #471=(nil . 2)) #485="outputs=encode_output" (#489=((:file #47#) . 1) #488=((:keyword "import") . 1) #487=(python-mode . 1) #486=(nil . 1)) #490="Reshape" (#494=((:file #47#) . 2) #493=((:keyword "import") . 2) #492=(python-mode . 2) #491=(nil . 2)) #500="UpSampling2D" (#504=((:file #47#) . 2) #503=((:keyword "import") . 2) #502=(python-mode . 2) #501=(nil . 2)) #505="Conv2DTranspose" (#509=((:file #47#) . 5) #508=((:keyword "import") . 5) #507=(python-mode . 5) #506=(nil . 5)) #518="adadelta" (#522=((:file #62#) . 1) #521=((:keyword "import") . 1) #520=(python-mode . 1) #519=(nil . 1)) "Embedding" (((:file #6#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) #537="captcha_break" (#541=((:file #10#) . 1) #540=((:keyword "from") . 1) #539=(python-mode . 1) #538=(nil . 1)) #543="captcha" (#547=((:file #10#) . 1) #546=((:keyword "from") . 1) #545=(python-mode . 1) #544=(nil . 1)) #555="string.digits" (#559=((:file #10#) . 1) #558=((:keyword "import") . 1) #557=(python-mode . 1) #556=(nil . 1)) "lstm_out" (((:file #6#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) #582="np.array" (#586=((:file #10#) . 1) #585=((:keyword "self") . 1) #584=(python-mode . 1) #583=(nil . 1)) #587="self.generator" (#591=((:file #10#) . 1) #590=((:keyword "self") . 1) #589=(python-mode . 1) #588=(nil . 1)) #592="self.generator.generate_image" (#596=((:file #10#) . 1) #595=((:keyword "self") . 1) #594=(python-mode . 1) #593=(nil . 1)) #619="n_cnn" (#623=((:file #10#) . 1) #622=((:keyword "in") . 1) #621=(python-mode . 1) #620=(nil . 1)) #626="n_len" (#630=((:file #10#) . 1) #629=((:keyword "in") . 1) #628=(python-mode . 1) #627=(nil . 1)) #633="../" (#635=(shell-mode . 1) #634=(nil . 1)) #639="foreign" (#642=((:file #63#) . 1) #641=(ess-r-mode . 1) #640=(nil . 1)) #643="./segmentation0726.sav" (#646=((:file #63#) . 2) #645=(ess-r-mode . 2) #644=(nil . 2)) #647="read.spss" (#650=((:file #63#) . 1) #649=(ess-r-mode . 1) #648=(nil . 1)) #651="use.value.labels = " (#655=((:file #63#) . 1) #654=((:symbol "nil") . 1) #653=(ess-r-mode . 1) #652=(nil . 1)) #656="to.data.frame = " (#660=((:file #63#) . 1) #659=((:symbol "FALSE") . 1) #658=(ess-r-mode . 1) #657=(nil . 1)) #662="mark-time-here" (#665=((:file #27#) . 1) #664=(emacs-lisp-mode . 1) #663=(nil . 1)) "./news_models.py" (((:file #6#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) #667="java-mode" (#671=((:file #27#) . 1) #670=((:keyword "use-package") . 1) #669=(emacs-lisp-mode . 1) #668=(nil . 1)) #686="HelloWorld.java" (#688=(shell-mode . 4) #687=(nil . 4)) #689="llc.exe" (#691=(shell-mode . 2) #690=(nil . 2)) #692="lsass.exe" (#694=(shell-mode . 1) #693=(nil . 1)) #695="wsl.exe" (#697=(shell-mode . 1) #696=(nil . 1)) #698="directxdatabaseupdater.exe" (#700=(shell-mode . 3) #699=(nil . 3)) #701="Demo.class" (#703=(shell-mode . 3) #702=(nil . 3)) #707="public" (#711=((:file #60#) . 2) #710=((:keyword "class") . 2) #709=(java-mode . 2) #708=(nil . 2)) "shared_lstm" (((:file #22#) . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) #717="void" (#721=((:file #60#) . 1) #720=((:keyword "static") . 1) #719=(java-mode . 1) #718=(nil . 1)) #727="System" (#731=((:file #60#) . 2) #730=((:keyword "static") . 2) #729=(java-mode . 2) #728=(nil . 2)) #733="String" (#737=((:file #60#) . 1) #736=((:keyword "static") . 1) #735=(java-mode . 1) #734=(nil . 1)))) company-statistics--log [("Dense" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #22#) . 1)) ("activation" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #64#) ("sigmoid" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #65#) (#66# #67# #68# #69# #70#) ("Model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #22#) . 1)) ("tweet_a" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #22#) . 1)) ("tweet_b" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #22#) . 1)) (#71# #72# #73# #74# #75#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #22#) . 1)) ("tensorflow.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #22#) . 1)) ("tensorflow.keras.utils" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #76#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #22#) . 1)) ("plot_model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #77#) ("plot_model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #22#) . 1)) (#78# #79# #80# #81# #82#) ("show_shapes" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #83#) ("import" (nil . 1) (python-mode . 1) #84#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #85#) ("tf.keras" (nil . 1) (python-mode . 1) #86# #87#) (#88# #89# #90# #91# #92#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #33#) . 1)) ("tensorflow.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #93#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #33#) . 1)) (#94# #95# #96# #97# #98#) ("activation" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #99#) (#100# #101# #102# #103# #104#) (#105# #106# #107# #108# #109#) ("layers.Dense" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #33#) . 1)) ("activation" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #33#) . 1)) ("softmax" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #110#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #111#) ("tensorflow.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #112#) ("tensorflow.keras.models" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #113#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #114#) ("Sequential" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #115#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("tensorflow.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("tensorflow.keras.layers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #116#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #117#) ("Activation" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #118#) ("Dropout" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #119#) ("Flatten" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #120#) ("Dense" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #121#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("tensorflow.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("tensorflow.keras.layers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #4#) . 1)) ("MaxPool2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #122#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("tensorflow.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("tensorflow.keras.utils" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #123#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("plot_model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #124#) ("Sequential" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #4#) . 1)) ("Conv2D" (nil . 1) (python-mode . 1) #125# ((:file #4#) . 1)) ("activation" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) #126#) ("\".format" #127# #128# #129# #130#) ("MaxPool2D" (nil . 1) (python-mode . 1) #131# ((:file #4#) . 1)) (#132# #133# #134# #135# #136#) ("Input" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #137#) ("Model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #138#) ("Input" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #4#) . 1)) (#139# #140# #141# #142# #143#) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #4#) . 1)) ("activation" (nil . 1) (python-mode . 1) #144# ((:file #4#) . 1)) (#145# #146# #147# #148# #149#) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #4#) . 1)) ("activation" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #4#) . 1)) ("NameError" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #150#) (#151# #152# #153# #154# #155#) ("MaxPool2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #4#) . 1)) ("strides" (nil . 1) (python-mode . 1) #156# ((:file #4#) . 1)) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #4#) . 1)) (#157# #158# #159# #160# #161#) ("activation" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #4#) . 1)) ("\".format" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #4#) . 1)) ("MaxPool2D" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #4#) . 1)) ("Flatten" (nil . 1) (python-mode . 1) #162# ((:file #4#) . 1)) ("Dense" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #4#) . 1)) ("activation" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #4#) . 1)) ("Dense" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #4#) . 1)) ("activation" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #4#) . 1)) ("Model" (nil . 1) (python-mode . 1) #163# ((:file #4#) . 1)) (#164# #165# #166# #167# #168#) (#169# #170# #171# #172# #173#) ("plot_model" (nil . 1) (python-mode . 1) #174# ((:file #4#) . 1)) (#175# #176# #177# #178# #179#) ("\".format" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #4#) . 1)) ("show_shapes" (nil . 1) (python-mode . 1) #180# #181#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("tensorflow.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) (#182# #183# #184# #185# #186#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #4#) . 1)) ("vgg16" (nil . 1) (python-mode . 1) #187# ((:file #4#) . 1)) (#188# #189# #190# #191# #192#) ("tensorflow.keras.layers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #193#) ("Dense" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #194#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #195#) ("tensorflow.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #196#) ("tensorflow.keras.models" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #197#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #198#) ("Model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #199#) (#200# #201# #202# #203# #204#) ("activation" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #205#) (#206# #207# #208# #209# #210#) ("activation" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #7#) . 1)) (#211# #212# #213# #214# #215#) ("input_img" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #7#) . 1)) (#216# #217# #218# #219# #220#) ("shape" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #221#) ("encoding_dim" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #7#) . 1)) ("Model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #7#) . 1)) ("input_img" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #7#) . 1)) ("encoded" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #7#) . 1)) (#222# #223# #224# #225# #226#) (#227# #228# #229# #230# #231#) (#232# #233# #234# #235# #236#) (#237# #238# #239# #240# #241#) ("encoded_input" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #7#) . 1)) ("autoencoder" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #7#) . 1)) (#242# #243# #244# #245# #246#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #7#) . 1)) ("tensorflow.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #7#) . 1)) (#247# #248# #249# #250# #251#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #7#) . 1)) (#252# #253# #254# #255# #256#) ("mnist" (nil . 1) (python-mode . 1) #257# ((:file #7#) . 1)) (#258# #259# #260# #261# #262#) ("x_train" #263# #264# #265# #266#) ("x_train" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("x_test" #267# #268# #269# #270#) ("x_test" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) (#271# #272# #273# #274# #275#) ("x_train" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("x_train" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("x_train" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("x_train" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("x_test" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("autoencoder" (nil . 1) (python-mode . 1) #276# ((:file #7#) . 1)) ("x_train" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("x_train" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("epochs" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) #277#) ("batch_size" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) #278#) ("shuffle" (nil . 1) (python-mode . 1) #279# #280#) ("validation_data" (nil . 1) (python-mode . 1) #281# #282#) ("x_test" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("x_test" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("encoded" (nil . 1) (python-mode . 1) #283# ((:file #7#) . 1)) (#284# #285# #286# #287# #288#) (#289# #290# #291# #292# #293#) ("x_test" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file #7#) . 1)) ("decoded" (nil . 1) (python-mode . 1) #294# ((:file #7#) . 1)) (#295# #296# #297# #298# #299#) (#300# #301# #302# #303# #304#) (#305# #306# #307# #308# #309#) (#310# #311# #312# #313# #314#) ("platform" (nil . 1) (python-mode . 1) #315# ((:file #7#) . 1)) ("\".format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) #316#) ("platform" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #7#) . 1)) (#317# #318# #319# #320# #321#) ("\".format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #7#) . 1)) ("\".format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #7#) . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #7#) . 1)) ("tf.keras" (nil . 1) (python-mode . 1) #322# #323#) (#324# #325# #326# #327# #328#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #329#) (#330# #331# #332# #333# #334#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #335#) (#336# #337# #338# #339# #340#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #58#) . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #58#) . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) #341#) ("platform" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #342#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #343#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #8#) . 1)) (#344# #345# #346# #347# #348#) (#349# #350# #351# #352# #353#) ("platform" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #8#) . 1)) ("platform.platform" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) #354#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #8#) . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #8#) . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #8#) . 1)) ("tensorflow.python.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #355#) ("tensorflow.python.keras.layers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #356#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #8#) . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #8#) . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #8#) . 1)) (#357# #358# #359# #360# #361#) ("tensorflow.python.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #8#) . 1)) (#362# #363# #364# #365# #366#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #8#) . 1)) ("Model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #367#) ("Sequential" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #368#) ("Dense" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #369#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #37#) . 1)) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #37#) . 1)) ("tensorflow.python.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #37#) . 1)) ("tensorflow.python.keras.layers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #37#) . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #37#) . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #37#) . 1)) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #37#) . 1)) ("tensorflow.python.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #37#) . 1)) ("tensorflow.python.keras.models" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #37#) . 1)) ("Model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #37#) . 1)) ("\".format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) #370#) ("tf.__version__" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #37#) . 1)) ("version" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #37#) . 1)) ("platform" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #37#) . 1)) ("platform.platform" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #37#) . 1)) (#371# #372# #373# #374# #375#) (#376# #377# #378# #379# #380#) ("np.random.random" (nil . 1) (python-mode . 1) #381# #382#) ("np.random" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #37#) . 1)) ("np.random.random" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #37#) . 1)) ("epochs" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) #383#) ("mnist" (nil . 1) (python-mode . 1) #384# #385#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #386#) (#387# #388# #389# #390# #391#) ("MNIST" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #61#) . 1)) (#392# #393# #394# #395# #396#) (#397# #398# #399# #400# #401#) (#402# #403# #404# #405# #406#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #407#) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #408#) ("tensorflow.python.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #409#) ("tensorflow.python.keras.layers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #410#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #411#) ("Input" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #412#) ("Dense" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #413#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("tensorflow.python.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("tensorflow.python.keras.models" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #414#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("Input" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #9#) . 1)) ("Dense" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #9#) . 1)) ("activation" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #415#) ("Model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #416#) (#417# #418# #419# #420# #421#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) (#422# #423# #424# #425# #426#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("plot_model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #427#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("tensorflow.python.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) (#428# #429# #430# #431# #432#) (#433# #434# #435# #436# #437#) ("tensorflow.python.keras.datasets" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("mnist" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #438#) ("mnist" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #9#) . 1)) ("mnist.load_data" (nil . 1) (python-mode . 1) #439# #440#) ("float32" (nil . 1) (python-mode . 1) #441# #442#) (#443# #444# #445# #446# #447#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) (#448# #449# #450# #451# #452#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #9#) . 1)) ("RMSprop" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #453#) (#454# #455# #456# #457# #458#) ("categorical" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #459#) ("crossentropy" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #460#) ("accuracy" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #461#) ("x_train" (nil . 1) (python-mode . 1) #462# #463#) ("model.evaluate" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #464#) (#465# #466# #467# #468# #469#) (#470# #471# #472#) ("yaml2obj.exe" (nil . 1) (shell-mode . 1)) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #473#) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) ("MaxPool2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #474#) ("MaxPool2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) (#475# #476# #477# #478# #479#) ("GlobalMaxPool2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) (#480# #481# #482# #483# #484#) (#485# #486# #487# #488# #489#) (#490# #491# #492# #493# #494#) ("Reshape" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) (#495# #496# #497# #498# #499#) (#500# #501# #502# #503# #504#) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) (#505# #506# #507# #508# #509#) ("Conv2DTranspose" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) ("Conv2DTranspose" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) ("UpSampling2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) ("Conv2DTranspose" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) ("Conv2DTranspose" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) ("autoencoder" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #510#) ("autoencoder" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #47#) . 1)) (#511# #512# #513# #514# #515#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #62#) . 1)) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #516#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #62#) . 1)) ("tensorflow.python.keras.optimizers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #517#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #62#) . 1)) (#518# #519# #520# #521# #522#) (#523# #524# #525# #526# #527#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #54#) . 1)) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #528#) ("tensorflow.python.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #529#) ("Adadelta" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #530#) ("Adadelta" (nil . 1) (python-mode . 1) #531# ((:file #54#) . 1)) (#532# #533# #534# #535# #536#) (#537# #538# #539# #540# #541#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #542#) (#543# #544# #545# #546# #547#) ("ImageCaptcha" (nil . 1) (python-mode . 1) #548# #549#) ("matplotlib" #550# #551# #552# #553#) ("matplotlib" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #10#) . 1)) ("numpy" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #554#) (#555# #556# #557# #558# #559#) (#560# #561# #562# #563# #564#) ("characters" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) #565#) ("characters" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file #10#) . 1)) (#566# #567# #568# #569# #570#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #571#) ("tensorflow.python.keras.utils" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #572#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #10#) . 1)) (#573# #574# #575# #576# #577#) ("tensorflow.python.keras.layers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #578#) ("tensorflow.python.keras.models" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #579#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #10#) . 1)) ("Sequential" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #580#) ("Sequence" (nil . 1) (python-mode . 1) #581# ((:file #10#) . 1)) (#582# #583# #584# #585# #586#) (#587# #588# #589# #590# #591#) (#592# #593# #594# #595# #596#) ("enumerate" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) #597#) ("characters" (nil . 1) (python-mode . 1) #598# ((:file #10#) . 1)) ("CaptchaSequence" #599# #600# #601# #602#) ("plt.imshow" (nil . 1) (python-mode . 1) #603# #604#) ("decode" (nil . 1) (python-mode . 1) #605# #606#) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #10#) . 1)) ("tensorflow.python.keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #607#) ("tensorflow.python.keras.models" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #10#) . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #10#) . 1)) ("tensorflow.python" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) #608#) (#609# #610# #611# #612# #613#) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file #10#) . 1)) (#614# #615# #616# #617# #618#) ("enumerate" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file #10#) . 1)) (#619# #620# #621# #622# #623#) ("n_class" (nil . 1) (python-mode . 1) #624# #625#) (#626# #627# #628# #629# #630#) ("Model" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) #631#) ("Model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file #10#) . 1)) ("Conv2D" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) #632#) (#633# #634# #635#) ("library" #636# #637# #638#) (#639# #640# #641# #642#) ("library" (nil . 1) (ess-r-mode . 1) ((:file #63#) . 1)) (#643# #644# #645# #646#) (#647# #648# #649# #650#) ("./segmentation0726.sav" (nil . 1) (ess-r-mode . 1) ((:file #63#) . 1)) (#651# #652# #653# #654# #655#) (#656# #657# #658# #659# #660#) ("data.table" (nil . 1) #661#) (#662# #663# #664# #665#) ("use-package" (nil . 1) (emacs-lisp-mode . 1) #666#) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:file #27#) . 1)) (#667# #668# #669# #670# #671#) ("lambda" (nil . 1) #672# #673# #674#) ("require" (nil . 1) #675# #676# #677#) ("use-package" (nil . 1) (emacs-lisp-mode . 1) #678# ((:file #27#) . 1)) (#679# #680# #681# #682# #683#) ("require" (nil . 1) (emacs-lisp-mode . 1) #684# #685#) (#686# #687# #688#) (#689# #690# #691#) (#692# #693# #694#) (#695# #696# #697#) (#698# #699# #700#) (#701# #702# #703#) ("Demo.class" (nil . 1) (shell-mode . 1)) ("help.exe" (nil . 1) (shell-mode . 1)) ("Demo.class" (nil . 1) (shell-mode . 1)) ("llc.exe" (nil . 1) (shell-mode . 1)) ("directxdatabaseupdater.exe" (nil . 1) (shell-mode . 1)) ("directxdatabaseupdater.exe" (nil . 1) (shell-mode . 1)) (#704# #705# #706#) ("HelloWorld.java" (nil . 1) (shell-mode . 1)) ("HelloWorld.java" (nil . 1) (shell-mode . 1)) ("HelloWorld.class" (nil . 1) (shell-mode . 1)) (#707# #708# #709# #710# #711#) (#712# #713# #714# #715# #716#) (#717# #718# #719# #720# #721#) (#722# #723# #724# #725# #726#) ("HelloWorld.java" (nil . 1) (shell-mode . 1)) (#727# #728# #729# #730# #731#) ("HelloWorld" (nil . 1) (java-mode . 1) #732# ((:file #60#) . 1)) ("public" (nil . 1) (java-mode . 1) ((:keyword "class") . 1) ((:file #60#) . 1)) ("static" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file #60#) . 1)) (#733# #734# #735# #736# #737#) ("System" (nil . 1) (java-mode . 1) ((:keyword "static") . 1) ((:file #60#) . 1))] company-statistics--index 0)