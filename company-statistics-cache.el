(setq company-statistics--scores #s(hash-table size 600 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("key=" (((:keyword "print") . 1)) "key=itemgetter" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) (python-mode . 1) (nil . 1)) "cholesky" (((:file "d:/Emacs/x86_64/bin/test-lsp-tobed.py") . 1) ((:keyword "as") . 1) ((:symbol "linalg") . 1) (python-mode . 1) (nil . 1)) "all_considered_brands" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1) (ess-r-mode . 1) (nil . 3) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 2) ((:keyword "in") . 2) (python-mode . 2)) "rows_by_date" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) (python-mode . 1) (nil . 1)) "outlier_std_times" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "sequence_vars" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/create_transaction.r") . 1)) ":hook" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-python-elpy.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "../output/xxx.xlsx" ((inferior-python-mode . 3) (nil . 3)) "bcmk_size" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1) (nil . 1)) "np.random" (((:file "d:/Emacs/x86_64/bin/test-lsp-tobed.py") . 1)) "BertConfig" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) (python-mode . 6) (nil . 6) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 5) ((:keyword "import") . 3) ((:keyword "return") . 1) ((:keyword "self") . 1)) "transformers" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "from") . 2) (python-mode . 2) (nil . 3) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/envs") . 1) (text-mode . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ":ensure" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-company.el") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "chinese" ((python-mode . 1) ((:symbol "base") . 1) (nil . 1)) "evil-leader-mode" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-evil.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "linalg" (((:symbol "scp") . 1) ((:file "g:/Projects/Pypkg/dapre/test.py") . 1) ((:keyword "as") . 1) (python-mode . 1) (nil . 1)) "shell-command" (((:file "/home/linyi/.emacs.d/lisp/init-tool.el") . 1) (emacs-lisp-mode . 1)) "target_displacement" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1) (nil . 1)) "preprocessing" (((:file "f:/pytest/testPandas/api-test.py") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "added_record" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1) (ess-r-mode . 1) (nil . 1)) "trainset" ((python-mode . 1) (nil . 1)) "../data/submission_benchmark.csv" ((python-mode . 1) (nil . 1)) "downcase_dtypes" (((:file "f:/Kaggle/predict_future_sales/scripts/data_preparation.py") . 1) ((:keyword "def") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb.py") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1) (python-mode . 1) (nil . 1)) ".data_preparation" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb.py") . 1)) "../data/items.csv" (((:keyword "import") . 1)) "datestamp" ((nil . 1)) "get_minute_time_trade" (((:file "f:/pytest/test_stocketl/test_stkl_api.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "train_test_set" (((:keyword "in") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) "feature_name" ((python-mode . 1) (nil . 1)) "list_all" (((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "Sprintf" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/multi_fetch/main.go") . 1) ((:symbol "fmt") . 1) (go-mode . 1) (nil . 1)) "pre_data" ((nil . 1)) "Seconds" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/multi_fetch/main.go") . 1) ((:symbol "nil") . 1) (go-mode . 1) (nil . 1)) "msys64" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 1) ((:keyword "condition-case") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Close" (((:keyword "defer") . 1)) "Atan" (((:file "/home/linyi/go/src/awesomeProject/test04/main.go") . 1) ((:symbol "math") . 1) ((:keyword "func") . 1) (go-mode . 1) (nil . 1)) "ordered" (((:file "/home/linyi/shiny/apps/DataScience/AnovaAnalysis/oneWayAnova.r") . 1) (ess-r-mode . 1) (nil . 1)) "self.downcase_dtypes" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "sales_train_path=" ((python-mode . 1) (nil . 1)) "../data/sales_train.csv" ((python-mode . 1) (nil . 1)) "items_path=" ((python-mode . 1) (nil . 1)) "shops_path=" ((python-mode . 1) (nil . 1)) "../data/shops.csv" ((python-mode . 1) (nil . 1)) "item_categories_path=" ((python-mode . 1) (nil . 1)) "../data/item_categories.csv" ((python-mode . 1) (nil . 1)) "test_path=" ((python-mode . 1) (nil . 1)) "../data/test.csv" ((python-mode . 1) (nil . 1)) "sample_submission_path=" ((python-mode . 1) (nil . 1)) "dataprocess" ((python-mode . 1) (nil . 1)) "dataprocess.pre_process_base" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) (python-mode . 1) (nil . 1)) "levels" ((nil . 1)) "summary" (((:file "/home/linyi/shiny/apps/DataScience/AnovaAnalysis/oneWayAnova.r") . 1)) "Decode" (((:symbol "nil") . 1) ((:keyword "var") . 1) (go-mode . 1) (nil . 1)) "NewDecoder" (((:keyword "var") . 1) (go-mode . 1) (nil . 1)) "expand.grid" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/previous_way_cross_benchmark.r") . 1) (ess-r-mode . 1) (nil . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/create_transaction.r") . 1)) "clear" ((shell-mode . 1) (nil . 1)) "on=index_col" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) (python-mode . 1) (nil . 1)) "new_feature" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) (python-mode . 1) (nil . 1)) "合并shop中新增字段" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "OneHotEncoder" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "import") . 1)) "feature_name=feature_list" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "encoding=" ((python-mode . 1) (nil . 1)) "../predict_rcnn_hi.txt" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1) (python-mode . 1) (nil . 1)) "iterake" (((:file "/mnt/d/test/Projection/2019Calibration/KeyCities/iterake_keycities.r") . 1) (ess-r-mode . 1) (nil . 1)) "utf8" (((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "./.env" (((:file "/mnt/d/test/Projection/2019Calibration/KeyCities/iterake_keycities.r") . 1) (ess-r-mode . 1) (nil . 1)) "sequence" ((inferior-ess-r-mode . 1) (nil . 3) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2) ((:keyword "import") . 1) (python-mode . 2) ((:keyword "print") . 1)) "helloworld" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/CmakeLists.txt") . 1) (text-mode . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/CMakeLists.txt") . 1) (fundamental-mode . 1) (nil . 1)) "xlist" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "c++-mode" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "use-package") . 1)) "emacs-major-version" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) (emacs-lisp-mode . 1) (nil . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-pet.el") . 1)) "targetdata" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1)) "lsp-clients" (((:keyword "with-eval-after-load") . 1) (lisp-interaction-mode . 1) (nil . 1)) "•_GLIBCXX_INCLUDE_NEXT_C_HEADERS" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1) (c++-mode . 1) (nil . 1)) "function" ((ess-r-mode . 1) (nil . 1)) "logging" (((:keyword "import") . 1)) "datetime" (((:file "/home/linyi/shiny/sq_discriminant/api_service/api_app.py") . 1) ((:keyword "try") . 1) (python-mode . 1) (nil . 1)) "delete-window" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "AutoModelForSequenceClassification" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "import") . 1)) "np.random.binomial" (((:file "d:/Emacs/x86_64/bin/test-lsp-tobed.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "AutoModelWithLMHead" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "python-indent-guess-indent-offset" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "target_file" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1) (nil . 1)) "pt_outputs" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) (python-mode . 1) (nil . 1)) "BertTokenizer" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) (python-mode . 3) (nil . 3) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2) ((:keyword "import") . 2)) "BertModel" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) (python-mode . 4) (nil . 4) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2) ((:keyword "import") . 2) ((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/models/bert_chinese.py") . 1) ((:keyword "class") . 1)) "get_label_map" (((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1) (python-mode . 1) (nil . 1)) "data.table" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/previous_way_cross_benchmark.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) "get_specified_minute_time_trade" (((:file "/media/linyi/StockData/Projects/Pypkg/test.py") . 1) ((:file "/media/linyi/StockData/Projects/Pypkg/stocketl/test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "Args" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/multi_fetch/main.go") . 1) ((:keyword "range") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1) ((:symbol "os") . 1) ((:keyword "func") . 1) (go-mode . 1) (nil . 1)) "get_15minute_time_trade" (((:file "g:/Projects/Pypkg/stocketl/tdx_web/__init__.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "Println" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/multi_fetch/main.go") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/pkgtest/main.go") . 1) ((:symbol "fmt") . 2) ((:keyword "func") . 1) (go-mode . 2) (nil . 2) ((:file "/home/linyi/go/src/code.oldboy.com/hello/hello.go") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1) ((:keyword "if") . 1)) "that" ((inferior-ess-r-mode . 1) (nil . 1)) "tkhsd" ((inferior-ess-r-mode . 1)) "godoc-at-point" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "rssMatcher" (((:keyword "func") . 1)) "matcher" (((:symbol "nil") . 1) ((:keyword "var") . 1) (go-mode . 1) (nil . 1)) "channelItem" (((:keyword "if") . 1)) "target_branddist" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1)) "bench_branddist" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1)) "rssDocument" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/chapter2/sample/matchers/rss.go") . 1) (go-mode . 1) (nil . 1)) "DataProcess" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "Body" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/chapter2/sample/matchers/rss.go") . 1) ((:symbol "resp") . 1) (go-mode . 1) (nil . 1)) "defaultMatcher" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/chapter2/sample/search/default.go") . 1) (go-mode . 1) (nil . 1)) "time-marked" (((:file "/home/linyi/.emacs.d/lisp/init-general-functions.el") . 1) ((:keyword "defvar") . 1) (emacs-lisp-mode . 1) (nil . 1)) "defun" (((:keyword "condition-case") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-shell.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "index_col" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "break") . 1) (python-mode . 1) (nil . 1)) "sprintf" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1) (nil . 1)) "benchmark_share_dist" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "xgb.DMatrix" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "./data/data_marketsize_brandshare.csv" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/previous_way_cross_benchmark.r") . 1)) "DBSCAN" (((:file "/media/linyi/nDataScience/pytorch/AINLP/test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "self.item_categories" (((:keyword "self") . 1) ((:keyword "else") . 1)) "LabelEncoder" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "defvar" (((:file "/home/linyi/.emacs.d/lisp/init-general-functions.el") . 1)) "self.feature_list" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "newdata" ((inferior-ess-r-mode . 1)) "forecast" (((:file "/mnt/hgfs/f/Kaggle/covid-19/script/dup_seir_modeling.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "sum.1" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "include" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/hello.cpp") . 1) (c++-mode . 1) (nil . 1)) "combo_name" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/previous_way_cross_benchmark.r") . 1)) "lsp-mode" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "window-system" (((:file "/home/linyi/.emacs.d/lisp/init-shell.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "message" (((:file "/home/linyi/.emacs.d/lisp/init-shell.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) (lisp-interaction-mode . 1) (nil . 1)) "characterAge" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1) ((:keyword "namespace") . 1) (c++-mode . 1) (nil . 1)) "mapply" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1)) "lsp-ui-doc--bounds" (((:keyword "use-package") . 1)) "hi-red-b" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "file.edit" (((:file "/media/linyi/nFiles/PersonalProjects/GraphicModel(Jennifer)/graphmodel2.r") . 1) (ess-r-mode . 1) (nil . 1)) ".N" ((inferior-ess-r-mode . 2) (nil . 2) ((:symbol "nil") . 1)) "add-to-list" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "with-eval-after-load") . 1) (emacs-lisp-mode . 1) (nil . 1)) "function-key-map" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1) ((:keyword "cl-pushnew") . 1) (emacs-lisp-mode . 1) (nil . 1)) "barVal" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/invert_map/main.go") . 1) (go-mode . 1) (nil . 1)) "LINUX_REBOOT_MAGIC1" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/reboot/main.go") . 1) ((:keyword "func") . 1) (go-mode . 1) (nil . 1)) "Pipeline" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "sl_end" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/copyAppendSlice/copy_append_slice.go") . 1) ((:keyword "func") . 1) (go-mode . 1) (nil . 1)) "test1" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/pkgtest/main.go") . 1) ((:keyword "var") . 1) (go-mode . 1) (nil . 1)) "code_count" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "torch.optim.AdamW" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "cross_comb" ((nil . 1)) "target_file_path" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/create_transaction.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/explore.r") . 1)) "test" (((:file "/home/linyi/shiny/apps/DataScience/AnovaAnalysis/oneWayAnova.r") . 1) (ess-r-mode . 1) (nil . 1)) "mark-time-here" ((emacs-lisp-mode . 1) (nil . 1)) "install.packages" (((:file "/media/linyi/nDataScience/Rtest/psm.r") . 1) ((:file "/home/linyi/shiny/apps/DataScience/AnovaAnalysis/oneWayAnova.r") . 1) (ess-r-mode . 1) (inferior-ess-r-mode . 4) (nil . 4)) "nrow_before_merge" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1) (nil . 1)) "with-temp-buffer" ((lisp-interaction-mode . 1) (nil . 1)) "diamonds" ((nil . 1)) "./data/brands.csv" ((ess-r-mode . 1) (nil . 1)) "ggplot_factor_continuous_boxplot" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/explore.r") . 1) (ess-r-mode . 1) (nil . 1)) "cty" ((inferior-ess-r-mode . 1) (nil . 1)) "freezingF" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/ftoc/main.go") . 1) ((:keyword "const") . 1) (go-mode . 1) (nil . 1)) "float64" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/ftoc/main.go") . 1) ((:keyword "func") . 1) (go-mode . 1) (nil . 1)) "p_load" (((:file "/mnt/d/test/Projection/2019Calibration/KeyCities/iterake_keycities.r") . 1)) "target_data" ((ess-r-mode . 6) (nil . 11) (inferior-ess-r-mode . 6) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 6)) "mean_ret" (((:file "/home/linyi/shiny/apps/DataScience/AnovaAnalysis/oneWayAnova.r") . 1) (ess-r-mode . 1) (nil . 1)) "brand_wgt" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 8) ((:symbol "nil") . 1) (inferior-ess-r-mode . 2) (nil . 9) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 7)) "ggplot_factor_barplot" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/explore.r") . 1) (ess-r-mode . 1) (nil . 1)) "final_data" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 6) ((:keyword "return") . 4) (python-mode . 6) (nil . 6) ((:keyword "in") . 1) ((:symbol "all_verbatim_path") . 1) ((:keyword "def") . 1)) "names" ((inferior-ess-r-mode . 2) ((:symbol "cty") . 1) (nil . 1)) "kill-buffer-and-window" (((:file "/home/linyi/.emacs.d/lisp/init-shell.el") . 1) ((:keyword "and") . 1) (emacs-lisp-mode . 1) (nil . 1)) "final_result" (((:file "/home/linyi/shiny/apps/DataScience/AnovaAnalysis/oneWayAnova.r") . 1) (ess-r-mode . 1) (nil . 1)) "evil-normal-state-map" (((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "data_file" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/previous_way_cross_benchmark.r") . 1)) "fread" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/explore.r") . 1)) "benchmark_data" ((inferior-ess-r-mode . 4) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/previous_way_cross_benchmark.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 3) (nil . 1)) "python-shell-font-lock-cleanup-buffer" ((lisp-interaction-mode . 1) (nil . 1)) "parse" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/previous_way_cross_benchmark.r") . 1)) "paste0" (((:file "/mnt/d/test/Projection/2019Calibration/KeyCities/bycity_cali/shanghai_cali.R") . 1) ((:symbol "text") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/previous_way_cross_benchmark.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 4) (ess-r-mode . 6) (nil . 7) (inferior-ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 3)) "target_data_each" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (inferior-ess-r-mode . 1) (nil . 1)) "data$City" (((:file "/mnt/d/test/Projection/2019Calibration/KeyCities/bycity_cali/shanghai_cali.R") . 1) (ess-r-mode . 1) (nil . 1)) "returns" (((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1) ((:keyword "if") . 1) (go-mode . 1) (nil . 1)) "get_cross_benchmark" ((ess-r-mode . 1) (nil . 1)) "setnames" (((:symbol "data.table") . 1)) "Flask" (((:file "/home/linyi/shiny/sq_discriminant/api_service/api_app.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "setkey" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1)) "__name__" (((:file "/home/linyi/shiny/sq_discriminant/api_service/api_app.py") . 1) (python-mode . 4) (nil . 4) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1) ((:keyword "if") . 3) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) "req_data" (((:keyword "if") . 1) ((:file "/home/linyi/shiny/sq_discriminant/api_service/api_app.py") . 1) ((:keyword "elif") . 1) (python-mode . 1) (nil . 1)) "as.numeric" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1) (ess-r-mode . 1) (nil . 1)) "jsonify" (((:file "/home/linyi/shiny/sq_discriminant/api_service/test.py") . 1)) "common_code_df" ((ess-r-mode . 1) (nil . 1)) "threshold_tab" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1) (nil . 1)) "DataFrame" (((:file "/media/linyi/StockData/Projects/Pypkg/stocketl/test.py") . 1) ((:keyword "with") . 1) ((:symbol "pd") . 4) (python-mode . 4) (nil . 4) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 4) ((:keyword "def") . 2) ((:keyword "in") . 1) ((:keyword "lambda") . 1)) "times_std" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1) (nil . 1)) "targetdata_merged" ((nil . 1)) "predictions" (((:keyword "in") . 1)) "create_manualcode" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2) ((:keyword "return") . 2) (python-mode . 2) (nil . 2)) "benchmark" ((nil . -3) (inferior-ess-r-mode . 1)) "flycheck-previous-error" (((:file "/home/linyi/.emacs.d/lisp/leader-key-binding.el") . 1) ((:keyword "defvar") . 1) (emacs-lisp-mode . 1) (nil . 1)) "mapLit" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/make_maps/main.go") . 1) ((:keyword "map") . 1) (go-mode . 1) (nil . 1)) "lsp-format-buffer" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "cutoff" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2) (ess-r-mode . 2) (nil . 3) (inferior-ess-r-mode . 1)) "combo_id" ((ess-r-mode . 2) (nil . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 2) ((:symbol "benchmark_data") . 1) ((:symbol "target_data") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/explore.r") . 1)) "invMap" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/invert_map/main.go") . 1) ((:keyword "range") . 1) (go-mode . 1) (nil . 1)) "package main" ((go-mode . 1) (nil . 1)) "MaxInt64" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/big/main.go") . 1) ((:symbol "math") . 1) ((:keyword "func") . 1) (go-mode . 1) (nil . 1)) "city_wgt" (((:symbol "nil") . 1) (inferior-ess-r-mode . 1)) "NewInt" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/big/main.go") . 1) ((:symbol "big") . 1) ((:keyword "func") . 1) (go-mode . 1) (nil . 1)) "fdate_string" (((:file "/media/linyi/StockData/Projects/Pypkg/stocketl/tdx_online/tdx_tick_api.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "city_weight" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "library" ((ess-r-mode . 1) (nil . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/test.r") . 1)) "TdxHq_API" (((:file "/media/linyi/StockData/Projects/Pypkg/stocketl/test.py") . 1) ((:keyword "import") . 1)) "division" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1) ((:keyword "if") . 1) (python-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_nationallevel.r") . 1) (ess-r-mode . 1)) "get_allstock_list" (((:file "/media/linyi/StockData/Projects/Pypkg/stocketl/test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "data_dummy" (((:file "/home/linyi/shiny/apps/DataScience/AnovaAnalysis/oneWayAnova.r") . 1) (ess-r-mode . 1)) "load_checkpoint" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/models/bert_chinese.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "self") . 1)) "string2variable" (((:file "/home/linyi/shiny/apps/DataScience/AnovaAnalysis/oneWayAnova.r") . 1) (ess-r-mode . 1) (inferior-ess-r-mode . 1) (nil . 1)) "level_seq" (((:file "/home/linyi/shiny/apps/DataScience/AnovaAnalysis/oneWayAnova.r") . 1) (ess-r-mode . 1) (nil . 1)) "category" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1) ((:keyword "if") . 1) (python-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_nationallevel.r") . 1) (nil . 1)) "hi-salmon" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "read.csv" (((:symbol "nil") . 1) (inferior-ess-r-mode . 1) (nil . 1)) "target" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1) ((:keyword "if") . 1) (python-mode . 1)) "ggplot2" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/test.r") . 1) (ess-r-mode . 2) (nil . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/test_ggplot2.r") . 1)) "pos_n_sim" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2) (ess-r-mode . 2) (nil . 2)) "drop_df" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1) (ess-r-mode . 1) (nil . 1)) "recode_x" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 2) ((:keyword "return") . 2) (python-mode . 2) (nil . 2)) "nrow_after_merge" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 1) (nil . 1)) "raise" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "benchmark_file_path" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_nationallevel.r") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/create_transaction.r") . 1)) "benchmark_tar_var" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1)) "match_manual_id" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "all_verbatim" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "unique" ((inferior-ess-r-mode . 1) (nil . 1) ((:symbol "nil") . 1)) "target_shrink" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_nationallevel.r") . 1)) "string>" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/Sales_data.cpp") . 1) ((:symbol "nil") . 1) (c++-mode . 1) (nil . 1)) "each_city" ((ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1) (nil . 1)) "benchmark_data_each" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "calc_one_cell" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "setdiff" ((nil . 7) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1) (ess-r-mode . 3) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1) (inferior-ess-r-mode . 4) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) "intersect" ((nil . 1)) "full_factorial" ((inferior-ess-r-mode . 1)) "tensor" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1) ((:symbol "torch") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "common_code" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 6) ((:keyword "in") . 2) (python-mode . 6) (nil . 6) ((:keyword "return") . 4) ((:symbol "common_code") . 2)) "max_length" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "rownum" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1) (ess-r-mode . 1) (nil . 1)) "optimizer" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "ct_br_cat_pr" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 2) (ess-r-mode . 2) (nil . 2)) "target_df" ((nil . 1)) "final_weight" ((inferior-ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "cmath>" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/pointer.cpp") . 1) ((:symbol "nil") . 1) (c++-mode . 1) (nil . 1)) "Market" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/NarrowGap.r") . 1) (ess-r-mode . 2) (nil . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) "../data/" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "../data/CSI Q1 3branch coding final明细0415 to peter.xlsx" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "ai_path" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "attentative_brand_list" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "../data/src_data/manual_coding.xlsx" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "../data/src_data/" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "manual_id" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "codeframe" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2) ((:keyword "in") . 2) (python-mode . 2) (nil . 2)) "final_data_path" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "itertools" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "target_col" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2) ((:keyword "def") . 1) (python-mode . 2) (nil . 2) ((:symbol "nil") . 1) ((:keyword "lambda") . 1)) "min_samples_leaf=" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "RandomForestRegressor" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "../output/all_verbatims.xlsx" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "category_dist" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 2) (nil . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) "Counter" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "lambda") . 1)) "collections" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "final_data_path=" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "result" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2) ((:keyword "lambda") . 2) (python-mode . 2) (nil . 2)) "chain" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "lambda") . 1)) "ai_code_count" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "all_codes" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "lambda") . 1) (python-mode . 1) (nil . 1)) "lambda" ((nil . 6) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 6) ((:keyword "def") . 3) (python-mode . 6) ((:keyword "return") . 2) ((:keyword "else") . 1)) "from_pretrained" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 3) ((:symbol "BertTokenizer") . 1) ((:keyword "import") . 2) (python-mode . 4) (nil . 4) ((:symbol "BertModel") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/models/bert_chinese.py") . 1) ((:symbol "nil") . 1) ((:keyword "self") . 1) ((:symbol "model") . 1) ((:keyword "return") . 1)) "tokenizer" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "print") . 1)) "tokenized_sequence" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "sequence_a" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "sequence_b" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "padded_sequences" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "float" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1) ((:symbol "torch") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "bert_dataset" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:symbol "dataset") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "DataLoader" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "if") . 1)) "loss_fn" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "not") . 1) (python-mode . 1) (nil . 1)) "ClassificationEvaluator" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "step" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1) ((:symbol "optimizer") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "epoch" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/train.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "printf(const char *__restrict __format, ...) -> int" ((c++-mode . 3) (nil . 3) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/test2.cpp") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/pointer2.cpp") . 2)) "share_dist" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "lsp-pyright-typechecking-mode" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/anaconda3/" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "cout : ostream" (((:symbol "std") . 2) (c++-mode . 2) (nil . 2) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/pointer.cpp") . 1)) "file-truename" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "align_datasets" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "endl(basic_ostream<_CharT, _Traits> &__os) -> basic_ostream<_CharT, _Traits> &" (((:symbol "std") . 2) (c++-mode . 2) (nil . 2) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 1) ((:keyword "else") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1)) "cin : istream" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/book.cpp") . 1) ((:symbol "std") . 1) (c++-mode . 1) (nil . 1)) "using namespace identifier;" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/whiletest.cpp") . 1) (c++-mode . 4) (nil . 4) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/test2.cpp") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/Sales_data.cpp") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/helloworld.cpp") . 1)) "currVal : int" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 5) ((:keyword "if") . 2) (c++-mode . 5) (nil . 5) ((:keyword "else") . 3)) "target_df$brand" ((inferior-ess-r-mode . 1) (nil . 1)) "else" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "int" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1) (c++-mode . 1) (nil . 1)) "reused : int" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 3) (c++-mode . 3) (nil . 3) ((:symbol "nil") . 1)) "unique : int" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 3) (c++-mode . 3) (nil . 3)) "use-package" (((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "cities" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_v2.r") . 1) (ess-r-mode . 1) (nil . 1)) "cpptools" (((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "struct" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/Sales_data.cpp") . 4) (c++-mode . 4) (nil . 4)) "std" (((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/helloworld.cpp") . 1) ((:keyword "namespace") . 1) (c++-mode . 1) (nil . 1)) "target_modified_path" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1) (ess-r-mode . 1) (nil . 1)) "added_records" ((inferior-ess-r-mode . 2) (nil . 10) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 8) (ess-r-mode . 8)) "cosine" ((inferior-ess-r-mode . 2) (nil . 2)) "1562" (((:symbol "3") . 1) (inferior-ess-r-mode . 1) (nil . 1)) "1216" (((:symbol "2") . 1) (inferior-ess-r-mode . 1) (nil . 1)) "sim_n_pos" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2) (ess-r-mode . 2) (nil . 2)) "correct" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1) (ess-r-mode . 1) (nil . 1)) "./data/M2_new.csv" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1) (ess-r-mode . 1) (nil . 1)) "./source_data/" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/2021March/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./source_data/final 4s data after filtering.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/2021March/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "../data/2021March_prediction.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/tag_on/output_result.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./source_data/2021March_Cleaned.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/2021March/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./source_data/4s_verbatim_encode.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/2021March/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "length" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 2) (ess-r-mode . 2) (nil . 2)) "keep_focused_brand" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./data/" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./data/NewRound_cadilac.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 2) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:keyword "in") . 1)) "./data/NewRound_chevry.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 2) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:keyword "in") . 1)) "./data/NewRound_training.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./data/template_Q3.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./data/2021March_Cleaned.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "seg_char" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/test.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "recode_to_common" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "align_code" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "xipp_b" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "br_cat" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "../data/Q3_for_prediction.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/tag_on/output_result.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./data/template_Q3_add.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "vars_name" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 7) ((:keyword "elif") . 1) (python-mode . 7) (nil . 7) ((:keyword "else") . 2) ((:keyword "print") . 2) ((:keyword "if") . 2)) "./data/21M1_data.csv" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/calc_gap.py") . 1) ((:keyword "return") . 1) (python-mode . 2) (nil . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1) ((:keyword "as") . 1)) "Series" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/calc_gap_simple.py") . 1) ((:symbol "pd") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "./data/21M2_data.csv" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/calc_gap_simple.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "../m2_adjust.csv" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/Pycode/calc_gap_simple.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "numerator" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 6) ((:keyword "if") . 6) (python-mode . 6) (nil . 6)) "denominator" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 2) ((:keyword "if") . 2) (python-mode . 2) (nil . 2)) "./data/template_Q3 add.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot_addv1/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./data/4s_verbatim_encode.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot_addv1/make_json_gm.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "main" (((:file "/home/linyi/go/src/code.oldboy.com/hello/hello.go") . 1) ((:keyword "package") . 2) (go-mode . 2) (nil . 2) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1)) "contents" (((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1) ((:keyword "return") . 1) (go-mode . 1) (nil . 1)) "ReadFile" (((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1) ((:symbol "ioutil") . 1) ((:keyword "func") . 1) (go-mode . 1) (nil . 1)) "github.com/" (((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1) ((:keyword "import") . 1) (go-mode . 1) (nil . 1)) "words" (((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1) ((:keyword "return") . 1) (go-mode . 1) (nil . 1)) "try" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/models/bert_chinese.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "help_recode_var" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/narrow_gap_nationallevel.r") . 1) (ess-r-mode . 1) (nil . 1)) "import" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "import") . 2) (python-mode . 2) (nil . 2) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/utils.py") . 1)) "environ" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:symbol "os") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "Config" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "manual_seed" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 2) ((:symbol "torch") . 1) ((:keyword "if") . 2) (python-mode . 2) (nil . 2) ((:symbol "cuda") . 1)) "sys" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/utils.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "combine_manual_ai" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 4) ((:keyword "def") . 3) (python-mode . 4) (nil . 4) ((:keyword "print") . 1)) "../data/CSI Q1 3branch C10l明细0415 to peter.xlsx" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "manual_path=" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "../data/output_beforeNew.xlsx" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "manual_file_path=" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "ai_file_path" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2) ((:keyword "def") . 2) (python-mode . 2) (nil . 2)) "read_excel" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2) ((:symbol "pd") . 2) ((:keyword "def") . 2) (python-mode . 2) (nil . 2)) "manual_file_path" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "manual" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 4) ((:keyword "print") . 1) (python-mode . 4) (nil . 4) ((:keyword "def") . 1) ((:keyword "in") . 2)) "all_negatives" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 3) ((:keyword "in") . 2) (python-mode . 3) (nil . 3) ((:keyword "def") . 1)) "add_index" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "index_dict" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2) ((:keyword "def") . 1) (python-mode . 2) (nil . 2) ((:keyword "in") . 1)) "RandomForestClassifier" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "indexes" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 3) ((:keyword "return") . 1) (python-mode . 3) (nil . 3) ((:keyword "in") . 2)) "add_index_helper" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "../output/" ((inferior-python-mode . 4) (nil . 4)) "index_name" (((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 5) ((:keyword "in") . 1) (python-mode . 5) (nil . 5) ((:keyword "return") . 3) ((:keyword "def") . 1)) "configuration" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2) ((:keyword "import") . 2) (python-mode . 2) (nil . 2)) "model_name" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 3) ((:keyword "import") . 1) (python-mode . 3) (nil . 3) ((:keyword "return") . 2)) "Logger" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:symbol "utils") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "exit(" ((inferior-python-mode . 2) (nil . 2)) "comment_text" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "items" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1) ((:symbol "inputs") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "targets" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "dtype=" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "input" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "BertDataset" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "dataset_name" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "train_dataset" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 2) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:keyword "else") . 1)) "batch_size=" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "num_workers=" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "collate_fn=" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "pin_memory=" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "train_data_loader" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "LookupError" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "collator" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:symbol "dataset") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "ClassificationType" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "ClassificationTrainer" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "not") . 1) (python-mode . 1) (nil . 1)) "evaluate" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "benchmark_ids" (((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/tanglu/explore.r") . 1) (ess-r-mode . 1) (nil . 1)) "classification_evaluate" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:symbol "evaluate") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "utils" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 2) ((:keyword "from") . 2) (python-mode . 2) (nil . 2)) "ModeType" (((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "bert_chinese" (((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/train.py") . 1) ((:symbol "models") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "BertChinese" (((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/train.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "from_dict" (((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/models/bert_chinese.py") . 1) ((:symbol "nil") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "AdamW" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "in") . 1)) "colnames" ((inferior-ess-r-mode . 1) (nil . 1)) "parameters" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1) ((:symbol "model") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "lr=" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "./checkpoint1/pytorch_model.bin" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2) ((:keyword "return") . 2) (python-mode . 2) (nil . 2)) "table" ((inferior-ess-r-mode . 1) (nil . 1)) "./ckp2/" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "best_epoch" (((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/train.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "lsp-deferred" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":init" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-pyright-auto-import-completions" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 4) ((:keyword "setq") . 4) (emacs-lisp-mode . 4) (nil . 4)) "return expression;" (((:file "/media/linyi/nDataScience/cpp_proj/udacity/helloworld/hello.cpp") . 1) (c++-mode . 1) (nil . 1)) "lsp-pyright-venv-path" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/anaconda3/envs/" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "requests" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test.py") . 2) ((:keyword "import") . 2) (python-mode . 2) (nil . 2)) "BeautifulSoup" (((:file "/media/linyi/nDataScience/pytorch/test_transformers/test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)))) company-statistics--log [("requests" (nil . 2) (python-mode . 2) ((:keyword "import") . 2) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test.py") . 2)) ("requests" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test.py") . 1)) ("BeautifulSoup" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test.py") . 1)) ("cin : istream" (nil . 1) (c++-mode . 1) ((:symbol "std") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/book.cpp") . 1)) ("using namespace identifier;" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/whiletest.cpp") . 1)) ("currVal : int" (nil . 5) (c++-mode . 5) ((:keyword "if") . 2) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 5)) ("currVal : int" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 1)) ("else" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 1)) ("currVal : int" (nil . 1) (c++-mode . 1) ((:keyword "else") . 3) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 1)) ("endl(basic_ostream<_CharT, _Traits> &__os) -> basic_ostream<_CharT, _Traits> &" (nil . 1) (c++-mode . 1) ((:keyword "else") . 1) ((:symbol "std") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 1)) ("currVal : int" (nil . 1) (c++-mode . 1) ((:keyword "else") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 1)) ("currVal : int" (nil . 1) (c++-mode . 1) ((:keyword "else") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/iftest.cpp") . 1)) ("int" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1)) ("reused : int" (nil . 3) (c++-mode . 3) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 3)) ("unique : int" (nil . 3) (c++-mode . 3) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 3)) ("endl(basic_ostream<_CharT, _Traits> &__os) -> basic_ostream<_CharT, _Traits> &" (nil . 1) (c++-mode . 1) ((:symbol "std") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1)) ("cout : ostream" (nil . 1) (c++-mode . 1) ((:symbol "std") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1)) ("reused : int" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1)) ("unique : int" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1)) ("reused : int" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1)) ("unique : int" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/scopetest.cpp") . 1)) ("cout : ostream" (nil . 1) (c++-mode . 1) ((:symbol "std") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/pointer.cpp") . 1)) ("use-package" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 2)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1)) ("cpptools" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1)) ("using namespace identifier;" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/test2.cpp") . 1)) ("printf(const char *__restrict __format, ...) -> int" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/test2.cpp") . 1)) ("cmath>" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/pointer.cpp") . 1)) ("printf(const char *__restrict __format, ...) -> int" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/pointer2.cpp") . 2)) ("printf(const char *__restrict __format, ...) -> int" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/pointer2.cpp") . 1)) ("struct" (nil . 4) (c++-mode . 4) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/Sales_data.cpp") . 4)) ("struct" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/Sales_data.cpp") . 1)) ("struct" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/Sales_data.cpp") . 1)) ("struct" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/Sales_data.cpp") . 1)) ("using namespace identifier;" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/Sales_data.cpp") . 1)) ("string>" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/Sales_data.cpp") . 1)) ("install.packages" (nil . 1) (inferior-ess-r-mode . 1)) ("read.csv" (nil . 1) (inferior-ess-r-mode . 1) ((:symbol "nil") . 1)) ("file.edit" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/GraphicModel(Jennifer)/graphmodel2.r") . 1)) ("install.packages" (nil . 1) (inferior-ess-r-mode . 1)) ("install.packages" (nil . 1) (inferior-ess-r-mode . 1)) ("install.packages" (nil . 1) (inferior-ess-r-mode . 1)) ("using namespace identifier;" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/helloworld.cpp") . 1)) ("std" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/media/linyi/nDataScience/cpp_proj/cpp_primer/1.1/helloworld.cpp") . 1)) ("benchmark_file_path" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2)) ("target_modified_path" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("benchmark_file_path" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("target_file_path" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("added_records" (nil . 7) (inferior-ess-r-mode . 1)) ("unique" (nil . 1) (inferior-ess-r-mode . 1) ((:symbol "nil") . 1)) (".N" (nil . 1) (inferior-ess-r-mode . 1) ((:symbol "nil") . 1)) ("added_records" (nil . 1) (ess-r-mode . 6) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 6)) ("pos_n_sim" (nil . 2) (ess-r-mode . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2)) ("pos_n_sim" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("benchmark_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2)) ("benchmark_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("target_data" (nil . 1) (inferior-ess-r-mode . 1)) ("cutoff" (nil . 3) (ess-r-mode . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2)) ("cutoff" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("added_records" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("data.table" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("added_records" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("added_records" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("added_record" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("setdiff" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("target_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2)) ("added_records" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("target_data" (nil . 1) (inferior-ess-r-mode . 1)) ("target_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("names" (nil . 1) (inferior-ess-r-mode . 1) ((:symbol "cty") . 1)) ("cutoff" (nil . 1) (inferior-ess-r-mode . 1)) ("cty" (nil . 1) (inferior-ess-r-mode . 1)) ("as.numeric" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("added_records" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("paste0" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("paste0" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("paste0" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("added_records" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("paste0" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("added_records" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("added_records" (nil . 1) (inferior-ess-r-mode . 1)) ("each_city" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("cosine" (nil . 2) (inferior-ess-r-mode . 2)) ("1562" (nil . 1) (inferior-ess-r-mode . 1) ((:symbol "3") . 1)) ("1216" (nil . 1) (inferior-ess-r-mode . 1) ((:symbol "2") . 1)) ("sim_n_pos" (nil . 2) (ess-r-mode . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 2)) ("paste0" (nil . 1) (inferior-ess-r-mode . 1)) ("sim_n_pos" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("cosine" (nil . 1) (inferior-ess-r-mode . 1)) ("target_data" (nil . 1) (inferior-ess-r-mode . 1)) ("benchmark_data" (nil . 1) (inferior-ess-r-mode . 1)) ("correct" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("benchmark_file_path" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1)) ("all_considered_brands" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1)) ("setdiff" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1)) ("benchmark_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1)) ("combo_id" (nil . 1) (ess-r-mode . 1) ((:symbol "benchmark_data") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 2)) ("target_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1)) ("combo_id" (nil . 1) (ess-r-mode . 1) ((:symbol "target_data") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel_matchConcat.r") . 1)) ("library" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/test.r") . 1)) ("ggplot2" (nil . 2) (ess-r-mode . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/test.r") . 1)) ("ggplot2" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/test_ggplot2.r") . 1)) ("./data/M2_new.csv" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/narrow_gap_ecitylevel.r") . 1)) ("./source_data/" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/2021March/make_json_gm.py") . 1)) ("./source_data/final 4s data after filtering.xlsx" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/2021March/make_json_gm.py") . 1)) ("../data/2021March_prediction.json" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/tag_on/output_result.py") . 1)) ("./source_data/2021March_Cleaned.xlsx" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/2021March/make_json_gm.py") . 1)) ("./source_data/4s_verbatim_encode.xlsx" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/2021March/make_json_gm.py") . 1)) ("rownum" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("benchmark_data" (nil . 1) (inferior-ess-r-mode . 1)) ("paste0" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 3)) ("paste0" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("length" (nil . 2) (ess-r-mode . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 2)) ("benchmark_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 3)) ("length" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("target_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 6)) ("benchmark_data" (nil . 1) (inferior-ess-r-mode . 1)) ("target_data" (nil . 1) (inferior-ess-r-mode . 1)) ("benchmark_data" (nil . 1) (inferior-ess-r-mode . 1)) ("target_data" (nil . 1) (inferior-ess-r-mode . 1)) ("setdiff" (nil . 1) (inferior-ess-r-mode . 3)) ("benchmark_file_path" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("benchmark_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("ct_br_cat_pr" (nil . 2) (ess-r-mode . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 2)) ("target_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("ct_br_cat_pr" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("setdiff" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("benchmark_data" (nil . 1) (inferior-ess-r-mode . 1)) ("category_dist" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("benchmark_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("brand_wgt" (nil . 1) (inferior-ess-r-mode . 1)) ("brand_wgt" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 7)) ("brand_wgt" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("Market" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("brand_wgt" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("brand_wgt" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("brand_wgt" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("brand_wgt" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("brand_wgt" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("target_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("drop_df" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("paste0" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("target_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("target_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("target_data" (nil . 1) (ess-r-mode . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/another_try.r") . 1)) ("setdiff" (nil . 1) (inferior-ess-r-mode . 1)) ("setdiff" (nil . 1) (inferior-ess-r-mode . 1)) ("setdiff" (nil . 1) (inferior-ess-r-mode . 1)) ("benchmark_data" (nil . 1) (inferior-ess-r-mode . 1)) ("target_data" (nil . 1) (inferior-ess-r-mode . 1)) ("all_considered_brands" (nil . 1) (python-mode . 2) ((:keyword "in") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 2)) ("all_considered_brands" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("keep_focused_brand" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("./data/" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1)) ("./data/NewRound_cadilac.xlsx" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 2)) ("./data/NewRound_chevry.xlsx" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 2)) ("./data/NewRound_training.xlsx" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1)) ("./data/template_Q3.xlsx" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1)) ("./data/NewRound_cadilac.xlsx" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1)) ("./data/NewRound_chevry.xlsx" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1)) ("./data/2021March_Cleaned.xlsx" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1)) ("seg_char" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/test.py") . 1)) ("common_code" (nil . 6) (python-mode . 6) ((:keyword "in") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 6)) ("recode_x" (nil . 2) (python-mode . 2) ((:keyword "return") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 2)) ("common_code" (nil . 1) (python-mode . 1) ((:keyword "return") . 4) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("common_code" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:symbol "common_code") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("recode_x" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("common_code" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("common_code" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:symbol "common_code") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("common_code" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("recode_to_common" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("align_code" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("xipp_b" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("category" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("division" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("br_cat" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("../data/Q3_for_prediction.json" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/tag_on/output_result.py") . 1)) ("./data/template_Q3_add.xlsx" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot/make_json_gm.py") . 1)) ("vars_name" (nil . 7) (python-mode . 7) ((:keyword "elif") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 7)) ("vars_name" (nil . 1) (python-mode . 1) ((:keyword "else") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("vars_name" (nil . 1) (python-mode . 1) ((:keyword "print") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("vars_name" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("vars_name" (nil . 1) (python-mode . 1) ((:keyword "if") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("vars_name" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("vars_name" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/bal_gap.py") . 1)) ("./data/21M1_data.csv" (nil . 2) (python-mode . 2) ((:keyword "return") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/calc_gap.py") . 1)) ("Series" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "pd") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/calc_gap_simple.py") . 1)) ("./data/21M2_data.csv" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/calc_gap_simple.py") . 1)) ("../m2_adjust.csv" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/2021Feb/Pycode/calc_gap_simple.py") . 1)) ("./data/21M1_data.csv" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("numerator" (nil . 6) (python-mode . 6) ((:keyword "if") . 6) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 6)) ("__name__" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("calc_one_cell" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("numerator" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("denominator" (nil . 2) (python-mode . 2) ((:keyword "if") . 2) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 2)) ("numerator" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("numerator" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("denominator" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("numerator" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("target" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("numerator" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nFiles/PersonalProjects/2021Projection/newRound/calculate_gap.py") . 1)) ("./data/template_Q3 add.xlsx" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot_addv1/make_json_gm.py") . 1)) ("./data/4s_verbatim_encode.xlsx" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/prepare_data/train_with_dot_addv1/make_json_gm.py") . 1)) ("main" (nil . 2) (go-mode . 2) ((:keyword "package") . 2) ((:file "/home/linyi/go/src/code.oldboy.com/hello/hello.go") . 1)) ("Println" (nil . 1) (go-mode . 1) ((:keyword "func") . 1) ((:symbol "fmt") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/hello/hello.go") . 1)) ("main" (nil . 1) (go-mode . 1) ((:keyword "package") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1)) ("Args" (nil . 1) (go-mode . 1) ((:keyword "func") . 1) ((:symbol "os") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1)) ("Println" (nil . 1) (go-mode . 1) ((:keyword "if") . 1) ((:symbol "fmt") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1)) ("returns" (nil . 1) (go-mode . 1) ((:keyword "if") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1)) ("contents" (nil . 1) (go-mode . 1) ((:keyword "return") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1)) ("ReadFile" (nil . 1) (go-mode . 1) ((:keyword "func") . 1) ((:symbol "ioutil") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1)) ("github.com/" (nil . 1) (go-mode . 1) ((:keyword "import") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1)) ("words" (nil . 1) (go-mode . 1) ((:keyword "return") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/testIO/io.go") . 1)) ("try" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/models/bert_chinese.py") . 1)) ("load_checkpoint" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/models/bert_chinese.py") . 2)) ("load_checkpoint" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/models/bert_chinese.py") . 1)) ("transformers" (nil . 1) (text-mode . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/envs") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("environ" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "os") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("Config" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("__name__" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("manual_seed" (nil . 2) (python-mode . 2) ((:keyword "if") . 2) ((:symbol "torch") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 2)) ("manual_seed" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "cuda") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/utils.py") . 1)) ("sys" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/utils.py") . 1)) ("DataFrame" (nil . 1) (python-mode . 1) ((:keyword "def") . 2) ((:symbol "pd") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 3)) ("DataFrame" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "pd") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("combine_manual_ai" (nil . 4) (python-mode . 4) ((:keyword "def") . 3) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 4)) ("../data/" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../data/CSI Q1 3branch coding final明细0415 to peter.xlsx" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("manual_path=" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../data/CSI Q1 3branch C10l明细0415 to peter.xlsx" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("ai_path" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../data/output_beforeNew.xlsx" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("combine_manual_ai" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("manual_file_path=" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("ai_file_path" (nil . 2) (python-mode . 2) ((:keyword "def") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2)) ("read_excel" (nil . 2) (python-mode . 2) ((:keyword "def") . 2) ((:symbol "pd") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2)) ("manual_file_path" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("__name__" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../data/src_data/" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../data/src_data/manual_coding.xlsx" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("combine_manual_ai" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("manual" (nil . 4) (python-mode . 4) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 4)) ("read_excel" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "pd") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("ai_file_path" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("manual" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("manual" (nil . 1) (python-mode . 1) ((:keyword "in") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("combine_manual_ai" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("manual" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("manual_id" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("match_manual_id" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("DataFrame" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "pd") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("lambda" (nil . 1) (python-mode . 4) ((:keyword "def") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 4)) ("lambda" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("create_manualcode" (nil . 2) (python-mode . 2) ((:keyword "return") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2)) ("lambda" (nil . 1) (python-mode . 1) ((:keyword "return") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("create_manualcode" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("lambda" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("all_negatives" (nil . 3) (python-mode . 3) ((:keyword "in") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 3)) ("all_negatives" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("all_negatives" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("final_data" (nil . 6) (python-mode . 6) ((:keyword "return") . 4) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 6)) ("codeframe" (nil . 2) (python-mode . 2) ((:keyword "in") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2)) ("codeframe" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("add_index" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("final_data" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("index_dict" (nil . 2) (python-mode . 2) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2)) ("xlist" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("indexes" (nil . 3) (python-mode . 3) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 3)) ("add_index_helper" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("index_dict" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../output/" (nil . 4) (inferior-python-mode . 4)) ("final_data" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("index_name" (nil . 5) (python-mode . 5) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 5)) ("index_name" (nil . 1) (python-mode . 1) ((:keyword "return") . 3) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("final_data" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("index_name" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../output/" (nil . 1) (inferior-python-mode . 1)) ("../output/xxx.xlsx" (nil . 3) (inferior-python-mode . 3)) ("indexes" (nil . 1) (python-mode . 1) ((:keyword "in") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("indexes" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../output/" (nil . 1) (inferior-python-mode . 1)) ("../output/xxx.xlsx" (nil . 1) (inferior-python-mode . 1)) ("all_verbatim" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("final_data" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:symbol "all_verbatim_path") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../output/" (nil . 1) (inferior-python-mode . 1)) ("../output/xxx.xlsx" (nil . 1) (inferior-python-mode . 1)) ("final_data_path" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("final_data" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("index_name" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("collections" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("Counter" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2)) ("code_count" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("final_data_path=" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("../output/all_verbatims.xlsx" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("index_name" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("target_col" (nil . 2) (python-mode . 2) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2)) ("lambda" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("lambda" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("itertools" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("chain" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2)) ("chain" (nil . 1) (python-mode . 1) ((:keyword "lambda") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("target_col" (nil . 1) (python-mode . 1) ((:keyword "lambda") . 1) ((:symbol "nil") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("Counter" (nil . 1) (python-mode . 1) ((:keyword "lambda") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("all_codes" (nil . 1) (python-mode . 1) ((:keyword "lambda") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("DataFrame" (nil . 1) (python-mode . 1) ((:keyword "lambda") . 1) ((:symbol "pd") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("result" (nil . 2) (python-mode . 2) ((:keyword "lambda") . 2) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 2)) ("result" (nil . 1) (python-mode . 1) ((:keyword "lambda") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("ai_code_count" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/ai_coding/code/working_processing.py") . 1)) ("BertTokenizer" (nil . 1) (python-mode . 1) ((:keyword "import") . 2) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2)) ("BertTokenizer" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("from_pretrained" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "BertTokenizer") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("tokenizer" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2)) ("sequence" (nil . 1) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2)) ("tokenized_sequence" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("tokenizer" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("sequence" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("sequence_a" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("sequence_b" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("padded_sequences" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("BertConfig" (nil . 1) (python-mode . 1) ((:keyword "import") . 2) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2)) ("BertConfig" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("BertModel" (nil . 1) (python-mode . 1) ((:keyword "import") . 2) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2)) ("configuration" (nil . 2) (python-mode . 2) ((:keyword "import") . 2) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2)) ("configuration" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("BertModel" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("from_pretrained" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "BertModel") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("model_name" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("Logger" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "utils") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("exit(" (nil . 2) (inferior-python-mode . 2)) ("exit(" (nil . 1) (inferior-python-mode . 1)) ("comment_text" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1)) ("max_length" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1)) ("items" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "inputs") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1)) ("tensor" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:symbol "torch") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1)) ("targets" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1)) ("dtype=" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1)) ("float" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:symbol "torch") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1)) ("input" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/dataset/bert_dataset.py") . 1)) ("bert_dataset" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "dataset") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("BertDataset" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("dataset_name" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("DataLoader" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 2)) ("DataLoader" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("train_dataset" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 2)) ("batch_size=" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("num_workers=" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("collate_fn=" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("pin_memory=" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("train_data_loader" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("train_dataset" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("raise" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("LookupError" (nil . 1) (python-mode . 1) ((:keyword "raise") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("collator" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "dataset") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("ClassificationType" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("ClassificationTrainer" (nil . 1) (python-mode . 1) ((:keyword "not") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("loss_fn" (nil . 1) (python-mode . 1) ((:keyword "not") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("evaluate" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("classification_evaluate" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "evaluate") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("ClassificationEvaluator" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("utils" (nil . 2) (python-mode . 2) ((:keyword "from") . 2) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 2)) ("utils" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("ModeType" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/NLP_models/train.py") . 1)) ("bert_chinese" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "models") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/train.py") . 1)) ("BertChinese" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/train.py") . 1)) ("BertModel" (nil . 1) (python-mode . 1) ((:keyword "class") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/models/bert_chinese.py") . 1)) ("from_dict" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:symbol "nil") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/models/bert_chinese.py") . 1)) ("from_pretrained" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:symbol "nil") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_transformers/models/bert_chinese.py") . 1)) ("BertConfig" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("BertConfig" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("transformers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("AdamW" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2)) ("AdamW" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("parameters" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "model") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("lr=" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("optimizer" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("step" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "optimizer") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("./checkpoint1/pytorch_model.bin" (nil . 2) (python-mode . 2) ((:keyword "return") . 2) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 2)) ("from_pretrained" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:symbol "model") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("./checkpoint1/pytorch_model.bin" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("model_name" (nil . 1) (python-mode . 1) ((:keyword "return") . 2) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("model_name" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("./ckp2/" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("BertConfig" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/test_transformers/test_transformers.py") . 1)) ("best_epoch" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/train.py") . 1)) ("epoch" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP_plus/train.py") . 1)) ("lsp-deferred" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("lsp-pyright-auto-import-completions" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "setq") . 3) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 3)) ("lsp-pyright-auto-import-completions" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("lsp-pyright-typechecking-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("lsp-pyright-auto-import-completions" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("lsp-pyright-venv-path" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("file-truename" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("~/anaconda3/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("~/anaconda3/envs/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("lsp-pyright-auto-import-completions" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1))] company-statistics--index 3)