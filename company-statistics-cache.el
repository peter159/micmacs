(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("word_couts.most_common" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "key=" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 3) ((:keyword "import") . 1) (python-mode . 3) (nil . 3) ((:keyword "print") . 2)) "key=itemgetter" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 4) ((:keyword "import") . 1) (python-mode . 4) (nil . 4) ((:keyword "print") . 3)) "cholesky" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/test/test_loss.py") . 1) ((:keyword "from") . 1) ((:file "d:/Emacs/x86_64/bin/test-lsp-tobed.py") . 1) ((:keyword "as") . 1)) "torch.nn.functional" ((python-mode . 3) (nil . 3) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/train.py") . 1) ((:keyword "from") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "in") . 1)) "row_by_uid" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "row_sorted" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "fnmatchcase" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "rows_by_date" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 2) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:keyword "in") . 1)) "namedtuple" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "use-package" ((emacs-lisp-mode . 5) (nil . 5) ((:keyword "use-package") . 2) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 3) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1) ((:keyword "require") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) "fnmatch" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) ":init" (((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ":hook" ((emacs-lisp-mode . 1) (nil . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1) ((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-python-elpy.el") . 1)) "tokenizer" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "anaconda-mode" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1) ((:keyword "evil-define-minor-mode-key") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":config" (((:keyword "use-package") . 2) (emacs-lisp-mode . 3) (nil . 3) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1) ((:keyword "setq-default") . 1)) "fundamental-mode" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1) ((:keyword "evil-define-minor-mode-key") . 1) (emacs-lisp-mode . 1) (nil . 1)) "define-key" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1) ((:keyword "cl-pushnew") . 1) (emacs-lisp-mode . 1) (nil . 1)) "function-key-map" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 2) ((:keyword "cl-pushnew") . 2) (emacs-lisp-mode . 2) (nil . 2)) "fundamental-mode-abbrev-table" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1) ((:keyword "cl-pushnew") . 1) (emacs-lisp-mode . 1) (nil . 1)) "torch.nn.functional.sigmoid" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "AutoModelWithLMHead" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2) ((:keyword "self") . 2) (python-mode . 2) (nil . 2)) "np.random" (((:file "d:/Emacs/x86_64/bin/test-lsp-tobed.py") . 1)) "BertConfig" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "self") . 1)) "transformers" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 2) ((:keyword "from") . 2) (python-mode . 2) (nil . 2)) ":ensure" (((:keyword "use-package") . 21) (emacs-lisp-mode . 21) (nil . 21) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 2) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 5) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 5) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 7)) "pipeline" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "chinese" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:symbol "base") . 3) ((:keyword "import") . 1) (python-mode . 2) (nil . 3) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese2.py") . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"model_name\"") . 1) (json-mode . 1)) "evil-leader-mode" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-evil.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "truncation=" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "linalg" (((:symbol "scp") . 1) ((:file "g:/Projects/Pypkg/dapre/test.py") . 1) ((:keyword "as") . 1) (python-mode . 1) (nil . 1)) "train_dataset" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese2.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "torch.optim.AdamW" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2) ((:keyword "return") . 2) (python-mode . 2) (nil . 2)) "total_loss" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "TextRCNN" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/conf/train_jlr_test.json") . 1) ((:keyword "\"model_name\"") . 1) (json-mode . 1) (nil . 1)) "label" (((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "self.conf" (((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "label_map" (((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "preprocessing" ((python-mode . 1) (nil . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/test.py") . 2) ((:keyword "import") . 2) ((:file "f:/pytest/testPandas/api-test.py") . 1)) "../data/after_sales_gm_data2.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP/tag_on/output_result.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./Aftersales/Aftersales/Q1_Buick_data.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./Aftersales/Aftersales/Q1_Cadillac_data.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "./Aftersales/Aftersales/Q1_Chevy_data.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "./Aftersales/Aftersales/Q2_Buick_data.xlsx" (((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "../data/after_sales_gm_Q1_buick.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"train_json_files\"") . 1) (json-mode . 1) (nil . 1)) "__name__" (((:file "f:/python_package_compile/xgboost/tests/python-gpu/test_gpu_basic_models.py") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) "../data/after_sales_gm_Q1_chevy.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"train_json_files\"") . 1) (json-mode . 1) (nil . 1)) "trainset" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1)) "../data/submission_benchmark.csv" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1)) "downcase_dtypes" (((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 6) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/data_preparation.py") . 1) ((:keyword "def") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) ".data_preparation" (((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb.py") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "import" (((:keyword "from") . 1) (python-mode . 1) (nil . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) "../checkpoint_dir/bert-base-chinese_0" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"model_name\"") . 1) (json-mode . 1) (nil . 1)) "../checkpoint_dir/bert-base-chinese_best" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"model_name\"") . 1) (json-mode . 1) (nil . 1)) "test_dataset" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese2.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "../data/items.csv" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) "datestamp" ((nil . 1)) "goimports" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "before-save-hook" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "get_minute_time_trade" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/train.py") . 1) ((:file "f:/pytest/test_stocketl/test_stkl_api.py") . 1)) "string" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1) ((:keyword "var") . 1) (go-mode . 1) (nil . 1)) "syscall" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1) ((:keyword "var") . 1) (go-mode . 1) (nil . 1)) "electric-spacing-mode" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "train_test_set" (((:keyword "import") . 1) ((:keyword "assert") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 3) ((:keyword "self") . 3)) "feature_name" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 5) ((:keyword "self") . 5)) "trainset2" (((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1) ((:keyword "del") . 1) (python-mode . 1) (nil . 1)) "上次售卖该item距今时间" (((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1) ((:keyword "lambda") . 1) (python-mode . 1) (nil . 1)) "TfidfVectorizer" (((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "eval_set" (((:file "f:/Kaggle/predict_future_sales/scripts/test_xgboost_gpu.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "cpu_info" (((:file "f:/pytorch/tutorials/test_cude.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "gpu_info" (((:file "f:/pytorch/tutorials/test_cude.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "TestGPUBasicModels" (((:file "f:/python_package_compile/xgboost/tests/python-gpu/test_gpu_basic_models.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "a.test_eta_decay_gpu_hist" (((:file "f:/python_package_compile/xgboost/tests/python-gpu/test_gpu_basic_models.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "tree_method=" (((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "w32-shell-execute" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 1) ((:keyword "condition-case") . 1) (emacs-lisp-mode . 1) (nil . 1)) "msys64" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 2) ((:keyword "condition-case") . 2) (emacs-lisp-mode . 2) (nil . 2)) "d:/msys64/" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 1) ((:keyword "condition-case") . 1) (emacs-lisp-mode . 1) (nil . 1)) "d:/msys64/msys2_shell.cmd" (((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 1) ((:keyword "condition-case") . 1) (emacs-lisp-mode . 1) (nil . 1)) ".items" (((:file "f:/pytest/testPandas/test_pandas_api.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "sales_train_path" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "items_path" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "shops_path" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "test_path" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "sample_submission_path" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "self.downcase_dtypes" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 6) ((:keyword "self") . 6) (python-mode . 6) (nil . 6)) "pd.read_csv" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "DataProcess" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2) ((:keyword "if") . 2) (python-mode . 2) (nil . 2)) "sales_train_path=" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "../data/sales_train.csv" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "items_path=" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "shops_path=" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "../data/shops.csv" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "item_categories_path=" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "../data/item_categories.csv" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "test_path=" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "../data/test.csv" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "sample_submission_path=" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "dataprocess" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1)) "dataprocess.pre_process_base" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:keyword "if") . 1)) "cur_shops" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "cur_items" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "self.pre_process_base" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "index_col=" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "self.item_categories" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 11) ((:keyword "in") . 1) (python-mode . 11) (nil . 11) ((:keyword "self") . 8) ((:keyword "else") . 2)) "self.pre_process_add_feature_1" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "../data/sample_submission.csv" (((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "lookback_range=" (((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "feature_list" (((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "-feature_list" (((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "trainX" (((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "../data/preds_models.csv" (((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "verbosity=" (((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "*feature_list" (((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "on=index_col" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2) ((:keyword "self") . 1) (python-mode . 2) (nil . 2) ((:keyword "break") . 1)) "index_col" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2) ((:keyword "break") . 2) (python-mode . 2) (nil . 2)) "new_feature" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 4) ((:keyword "break") . 3) (python-mode . 4) (nil . 4) ((:keyword "self") . 1)) "self.feature_list" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 4) ((:keyword "break") . 1) (python-mode . 4) (nil . 4) ((:keyword "in") . 1) ((:keyword "self") . 2)) "label=" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "xgb.DMatrix" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 2) ((:keyword "import") . 2) (python-mode . 2) (nil . 2)) "testX" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1) ((:keyword "del") . 1) (python-mode . 1) (nil . 1)) "dtest" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "deval" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "logging.basicConfig" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "filename=" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "OneHotEncoder" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2) ((:keyword "import") . 2) (python-mode . 3) (nil . 3) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/test.py") . 1)) "feature_names=feature_list" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "feature_name=feature_list" (((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 2) ((:keyword "import") . 2) (python-mode . 2) (nil . 2)) "合并shop中新增字段" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2) ((:keyword "self") . 2) (python-mode . 2) (nil . 2)) "self.pre_process_fix_shop" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "LabelEncoder" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2) ((:keyword "self") . 2) (python-mode . 2) (nil . 2)) "self.feature_list.extend" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "self.pre_process_fix_items" (((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "url-proxy-services" (((:file "/home/linyi/.emacs.d/lisp/init-version-control.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "/home/linyi/anaconda3/" (((:keyword "setq") . 1) (lisp-interaction-mode . 1) (nil . 1)) "/home/linyi/anaconda3/envs/" (((:keyword "setq") . 1) (lisp-interaction-mode . 1) (nil . 1)) "inferior-R-program-name" (((:file "/home/linyi/.emacs.d/lisp/init-ess.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "/usr/bin/R" (((:file "/home/linyi/.emacs.d/lisp/init-ess.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "forecast" (((:file "/mnt/hgfs/f/Kaggle/covid-19/script/dup_seir_modeling.py") . 4) ((:keyword "return") . 4) (python-mode . 4) (nil . 4)) "encoding=" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1) ((:keyword "with") . 1)) "dtype=" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "../predict_rcnn_new.txt" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "../predict_rcnn_hi.txt" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "if") . 1)) "../predict_textcnn_hi.txt" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "../predict_transformer_hi.txt" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "../predict.txt" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "../Service_OE_201906_Check1.csv" (((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "utf8" (((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 2) ((:keyword "def") . 2) (python-mode . 2) (nil . 2)) "f.readlines" (((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "continue" (((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) ".extend" (((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "../data/jlr_nlp/jlr_predict.json" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "include" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/hello.cpp") . 2) (c++-mode . 2) (nil . 2)) "ccls--sem-overlays" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "ccls-executable" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "setq" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-prefer-flymake" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "setq-default" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "flycheck-disabled-checkers" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "setq-default") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lambda" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "setq-default") . 1) (emacs-lisp-mode . 1) (nil . 1)) "require" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:file "/home/linyi/.emacs.d/init.el") . 1) ((:keyword "require") . 1)) "/snap/bin/" (((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "/snap/bin/ccls" (((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "endl" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld.cpp") . 1) ((:symbol "std") . 1) (c++-mode . 1) (nil . 1)) "helloworld" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/CmakeLists.txt") . 2) (text-mode . 2) (nil . 4) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/CMakeLists.txt") . 2) (fundamental-mode . 2)) "abs" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1) ((:symbol "std") . 1) (c++-mode . 1) (nil . 1)) "c++-mode" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2) ((:keyword "setq") . 1) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "use-package") . 2) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1)) "lsp-ui-imenu-mode-hook" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 3) ((:keyword "use-package") . 3) (emacs-lisp-mode . 3) (nil . 3)) ":preface" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "emacs-major-version" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2) ((:keyword "if") . 1) (emacs-lisp-mode . 4) (nil . 4) ((:keyword "when") . 3) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 2)) "inline" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/test/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "with-no-warnings" (((:file "/home/linyi/.emacs.d/init.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "get" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1) ((:symbol "cin") . 1) (c++-mode . 1) (nil . 1)) "lsp-mode" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "flush" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 2) ((:symbol "cout") . 1) (c++-mode . 2) (nil . 2) ((:symbol "std") . 1) ((:keyword "namespace") . 1)) "with-eval-after-load" ((lisp-interaction-mode . 1) (nil . 1)) "lsp-clients" (((:keyword "with-eval-after-load") . 2) (lisp-interaction-mode . 2) (nil . 2)) "remhash" (((:keyword "with-eval-after-load") . 1) (lisp-interaction-mode . 1) (nil . 1)) "•std::string" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1) ((:keyword "class") . 1) (c++-mode . 1) (nil . 1)) " test" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1) ((:symbol "string") . 1) ((:keyword "class") . 1) (c++-mode . 1) (nil . 1)) "•_GLIBCXX_INCLUDE_NEXT_C_HEADERS" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 2) (c++-mode . 2) (nil . 2)) "put" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1) ((:symbol "cout") . 1) (c++-mode . 1) (nil . 1)) "tellp" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1) ((:symbol "cout") . 1) (c++-mode . 1) (nil . 1)) "lsp-auto-guess-root" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "namespace" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1) ((:keyword "using") . 1) (c++-mode . 1) (nil . 1)) "characterAge" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 4) ((:keyword "namespace") . 4) (c++-mode . 4) (nil . 4)) "characterName" (((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 3) ((:keyword "namespace") . 3) (c++-mode . 3) (nil . 3)) "lsp-find-definition" (((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2) ((:keyword "let") . 2) (emacs-lisp-mode . 2) (nil . 2)) "make-lsp-session" ((lisp-interaction-mode . 1) (nil . 1)) "lsp-deferred" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-python-ms-nupkg-channel" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "DataFrame" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/test/test_loss.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "torch" (((:file "/media/linyi/StockData/Projects/Pypkg/stocketl/tdx_online/tdx_static_api.py") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "stocketl.tdx_online" (((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/train.py") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "doom-modeline-minor-modes" (((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-env-version" (((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 3) ((:keyword "setq") . 3) (emacs-lisp-mode . 3) (nil . 3)) "doom-modeline-mode" (((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "after-focus-change-function" (((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pyvenv-activate" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pyvenv-workon" (((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "word_couts" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "row_by_name" (((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "evil-define-minor-mode-key" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1) ((:keyword "evil-define-minor-mode-key") . 1) (emacs-lisp-mode . 1) (nil . 1)) "anaconda" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1) ((:keyword "evil-define-minor-mode-key") . 1) (emacs-lisp-mode . 1) (nil . 1)) "delete-window" (((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 2) ((:keyword "evil-define-minor-mode-key") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "cl-pushnew") . 1)) "AutoModelForMaskedLM" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "AutoModelForSequenceClassification" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2) ((:keyword "import") . 2) (python-mode . 3) (nil . 3) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) "np.random.binomial" (((:file "d:/Emacs/x86_64/bin/test-lsp-tobed.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "BertConfig.from_pretrained" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "Pipeline" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 2) ((:keyword "import") . 2) (python-mode . 2) (nil . 2)) "model=" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "classifier" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "AutoModelForSequenceClassification.from_pretrained" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "return_tensors=" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "pt_outputs" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 2) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:keyword "as") . 1)) "BertTokenizer" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "print") . 1)) "BertForSequenceClassification" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "BertModel" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "self") . 1)) "targets" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "metrics.precision_score" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "micro" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "metrics" (((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "get_label_map" (((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "self") . 1)) "self.id_to_label_map" (((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 3) ((:keyword "self") . 3) (python-mode . 3) (nil . 3)) "../data/after_sales_gm_Q1_cadillac.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"train_json_files\"") . 1) (json-mode . 1) (nil . 1)) "../data/after_sales_gm_Q2_buick.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"train_json_files\"") . 1) (json-mode . 1) (nil . 1)) "../data/after_sales_gm_Q2_cadillac.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"train_json_files\"") . 1) (json-mode . 1) (nil . 1)) "../data/after_sales_gm_Q2_chevy.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"train_json_files\"") . 1) (json-mode . 1) (nil . 1)) "../data/gm_labels_dict.json" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"label_dict\"") . 1) (json-mode . 1) (nil . 1)) "sequence_labels" (((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "sequence" (((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "WORKAROUND" (((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "./json_files/" (((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1) ((:keyword "with") . 1) (python-mode . 1) (nil . 1)) "best_epoch" (((:file "/media/linyi/nDataScience/pytorch/AINLP/train.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "../checkpoint_dir/" (((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1) ((:keyword "\"model_name\"") . 1) (json-mode . 1) (nil . 1)) "ScanState" (((:file "/media/linyi/nDataScience/GO/src/test.com/hello.go") . 2) ((:symbol "fmt") . 2) ((:keyword "func") . 2) (go-mode . 2) (nil . 2)) "electric-operator-mode-hook" (((:file "/home/linyi/.emacs.d/lisp/init-program-basis.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "gofmt-command" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "indent-tabs-mode" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "add-hook" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "gofmt-before-save" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "tab-width" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 5) ((:keyword "setq") . 5) (emacs-lisp-mode . 5) (nil . 5)) "Args" (((:file "/home/linyi/go/src/main/hello.go") . 2) ((:symbol "os") . 5) ((:keyword "for") . 1) (go-mode . 5) (nil . 5) ((:keyword "func") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 3) ((:keyword "var") . 3)) "s" (((:file "/home/linyi/go/src/main/hello.go") . 1) ((:keyword "range") . 1) (go-mode . 1) (nil . 1)) "electric-operator-add-rules-for-mode" (((:file "/home/linyi/.emacs.d/lisp/init-program-basis.el") . 1) ((:keyword "lambda") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) "go-mode" (((:file "/home/linyi/.emacs.d/lisp/init-program-basis.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "get_15minute_time_trade" (((:file "g:/Projects/Pypkg/stocketl/tdx_web/__init__.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "int" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1) ((:keyword "var") . 1) (go-mode . 1) (nil . 1)) "Println" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1) ((:symbol "fmt") . 1) ((:keyword "var") . 1) (go-mode . 1) (nil . 1)) "os" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/datatype/main.go") . 1) ((:keyword "var") . 1) (go-mode . 1) (nil . 1)) "go-mode-map" (((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "MinInt16" (((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/datatype/main.go") . 1) ((:symbol "math") . 1) ((:keyword "var") . 1) (go-mode . 1) (nil . 1)))) company-statistics--log [("MinInt16" (nil . 1) (go-mode . 1) ((:keyword "var") . 1) ((:symbol "math") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/datatype/main.go") . 1)) ("train_test_set" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("trainset2" (nil . 1) (python-mode . 1) ((:keyword "del") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("上次售卖该item距今时间" (nil . 1) (python-mode . 1) ((:keyword "lambda") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) (".data_preparation" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 6)) ("downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("TfidfVectorizer" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("train_test_set" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("train_test_set" (nil . 1) (python-mode . 1) ((:keyword "assert") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("eval_set" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/test_xgboost_gpu.py") . 1)) ("cpu_info" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/pytorch/tutorials/test_cude.py") . 1)) ("gpu_info" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/pytorch/tutorials/test_cude.py") . 1)) ("__name__" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "f:/python_package_compile/xgboost/tests/python-gpu/test_gpu_basic_models.py") . 1)) ("TestGPUBasicModels" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "f:/python_package_compile/xgboost/tests/python-gpu/test_gpu_basic_models.py") . 1)) ("a.test_eta_decay_gpu_hist" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "f:/python_package_compile/xgboost/tests/python-gpu/test_gpu_basic_models.py") . 1)) ("tree_method=" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/feature_engineering.py") . 1)) ("w32-shell-execute" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "condition-case") . 1) ((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 1)) ("msys64" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "condition-case") . 2) ((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 2)) ("msys64" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "condition-case") . 1) ((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 1)) ("d:/msys64/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "condition-case") . 1) ((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 1)) ("d:/msys64/msys2_shell.cmd" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "condition-case") . 1) ((:file "c:/Users/peter.linyi/AppData/Roaming/.emacs.d/lisp/init-shell.el") . 1)) (".items" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/pytest/testPandas/test_pandas_api.py") . 1)) ("sales_train_path" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("items_path" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("shops_path" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("test_path" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("sample_submission_path" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.downcase_dtypes" (nil . 6) (python-mode . 6) ((:keyword "self") . 6) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 6)) ("self.downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("pd.read_csv" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.downcase_dtypes" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("__name__" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("DataProcess" (nil . 2) (python-mode . 2) ((:keyword "if") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2)) ("sales_train_path=" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("../data/sales_train.csv" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("items_path=" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("../data/items.csv" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("shops_path=" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("../data/shops.csv" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("item_categories_path=" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("../data/item_categories.csv" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("test_path=" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("../data/test.csv" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("sample_submission_path=" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("../data/submission_benchmark.csv" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("DataProcess" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("dataprocess" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("dataprocess.pre_process_base" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2)) ("cur_shops" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("cur_items" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("dataprocess.pre_process_base" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.pre_process_base" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("index_col=" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("preprocessing" (nil . 1) (python-mode . 1) ((:keyword "import") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/test.py") . 2)) ("preprocessing" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/test.py") . 1)) ("self.item_categories" (nil . 11) (python-mode . 11) ((:keyword "in") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 11)) ("self.pre_process_add_feature_1" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("feature_name" (nil . 1) (python-mode . 1) ((:keyword "self") . 5) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 5)) ("feature_name" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("feature_name" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("sales_train_path=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("../data/sales_train.csv" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("items_path=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("../data/items.csv" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("shops_path=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("../data/shops.csv" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("item_categories_path=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("../data/item_categories.csv" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("test_path=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("../data/test.csv" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("sample_submission_path=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("../data/sample_submission.csv" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("lookback_range=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("dataprocess" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("feature_list" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("-feature_list" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("trainX" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("../data/preds_models.csv" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("verbosity=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("*feature_list" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/models.py") . 1)) ("feature_name" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("on=index_col" (nil . 2) (python-mode . 2) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2)) ("train_test_set" (nil . 1) (python-mode . 1) ((:keyword "self") . 3) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 3)) ("on=index_col" (nil . 1) (python-mode . 1) ((:keyword "break") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("index_col" (nil . 2) (python-mode . 2) ((:keyword "break") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2)) ("new_feature" (nil . 4) (python-mode . 4) ((:keyword "break") . 3) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 4)) ("new_feature" (nil . 1) (python-mode . 1) ((:keyword "break") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.feature_list" (nil . 4) (python-mode . 4) ((:keyword "break") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 4)) ("new_feature" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("index_col" (nil . 1) (python-mode . 1) ((:keyword "break") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("new_feature" (nil . 1) (python-mode . 1) ((:keyword "break") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("label=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1)) ("xgb.DMatrix" (nil . 2) (python-mode . 2) ((:keyword "import") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 2)) ("xgb.DMatrix" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1)) ("testX" (nil . 1) (python-mode . 1) ((:keyword "del") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1)) ("dtest" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1)) ("deval" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1)) ("logging.basicConfig" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1)) ("filename=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1)) ("OneHotEncoder" (nil . 3) (python-mode . 3) ((:keyword "import") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2)) ("OneHotEncoder" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.feature_list" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("feature_name" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("OneHotEncoder" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/test.py") . 1)) ("feature_names=feature_list" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1)) ("feature_name=feature_list" (nil . 2) (python-mode . 2) ((:keyword "import") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 2)) ("feature_name=feature_list" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/model_xgb_gpu_oneset.py") . 1)) ("trainset" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("合并shop中新增字段" (nil . 2) (python-mode . 2) ((:keyword "self") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2)) ("self.pre_process_fix_shop" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "self") . 8) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "else") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("LabelEncoder" (nil . 2) (python-mode . 2) ((:keyword "self") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 2)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.item_categories" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("LabelEncoder" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.feature_list" (nil . 1) (python-mode . 1) ((:keyword "self") . 2) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("合并shop中新增字段" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("train_test_set" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("train_test_set" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.feature_list" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.feature_list.extend" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("self.pre_process_fix_items" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "f:/Kaggle/predict_future_sales/scripts/process_data.py") . 1)) ("url-proxy-services" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-version-control.el") . 1)) ("/home/linyi/anaconda3/" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "setq") . 1)) ("/home/linyi/anaconda3/envs/" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "setq") . 1)) ("inferior-R-program-name" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ess.el") . 1)) ("/usr/bin/R" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ess.el") . 1)) ("forecast" (nil . 4) (python-mode . 4) ((:keyword "return") . 4) ((:file "/mnt/hgfs/f/Kaggle/covid-19/script/dup_seir_modeling.py") . 4)) ("forecast" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/mnt/hgfs/f/Kaggle/covid-19/script/dup_seir_modeling.py") . 1)) ("forecast" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/mnt/hgfs/f/Kaggle/covid-19/script/dup_seir_modeling.py") . 1)) ("forecast" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/mnt/hgfs/f/Kaggle/covid-19/script/dup_seir_modeling.py") . 1)) ("encoding=" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1)) ("dtype=" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1)) ("../predict_rcnn_new.txt" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1)) ("../predict_rcnn_hi.txt" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 2)) ("../predict_rcnn_hi.txt" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1)) ("../predict_textcnn_hi.txt" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1)) ("../predict_transformer_hi.txt" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1)) ("../predict.txt" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1)) ("../Service_OE_201906_Check1.csv" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1)) ("utf8" (nil . 2) (python-mode . 2) ((:keyword "def") . 2) ((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 2)) ("encoding=" (nil . 1) (python-mode . 1) ((:keyword "with") . 1) ((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1)) ("f.readlines" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1)) ("utf8" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1)) ("continue" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1)) (".extend" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/media/linyi/DataScience/tobedelete/JLR_NLP/JLR_CEIP_Service_OE_202001_202003/data_clean/make_json.py") . 1)) ("../data/jlr_nlp/jlr_predict.json" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/tag_on/output_result.py") . 1)) ("include" (nil . 2) (c++-mode . 2) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/hello.cpp") . 2)) ("include" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/hello.cpp") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 3)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("ccls--sem-overlays" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("ccls-executable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("setq" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("lsp-prefer-flymake" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("setq-default" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("flycheck-disabled-checkers" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("/snap/bin/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1)) ("/snap/bin/ccls" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-c-c++.el") . 1)) ("endl" (nil . 1) (c++-mode . 1) ((:symbol "std") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld.cpp") . 1)) ("helloworld" (nil . 4) (text-mode . 2) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/CmakeLists.txt") . 2)) ("helloworld" (nil . 1) (text-mode . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/CmakeLists.txt") . 1)) ("helloworld" (nil . 1) (fundamental-mode . 2) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/CMakeLists.txt") . 2)) ("helloworld" (nil . 1) (fundamental-mode . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/CMakeLists.txt") . 1)) ("abs" (nil . 1) (c++-mode . 1) ((:symbol "std") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) (":hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("c++-mode" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("lsp-ui-imenu-mode-hook" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "use-package") . 3) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 3)) ("lsp-ui-imenu-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("lsp-ui-imenu-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("c++-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 2) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) (":preface" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("emacs-major-version" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "if") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2)) ("emacs-major-version" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 2)) ("inline" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/test/main.cpp") . 1)) ("with-no-warnings" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/linyi/.emacs.d/init.el") . 1)) ("get" (nil . 1) (c++-mode . 1) ((:symbol "cin") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("lsp-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 2)) ("lsp-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("flush" (nil . 1) (c++-mode . 1) ((:symbol "cout") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("with-eval-after-load" (nil . 1) (lisp-interaction-mode . 1)) ("lsp-clients" (nil . 2) (lisp-interaction-mode . 2) ((:keyword "with-eval-after-load") . 2)) ("remhash" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "with-eval-after-load") . 1)) ("lsp-clients" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "with-eval-after-load") . 1)) ("•std::string" (nil . 1) (c++-mode . 1) ((:keyword "class") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) (" test" (nil . 1) (c++-mode . 1) ((:keyword "class") . 1) ((:symbol "string") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("•_GLIBCXX_INCLUDE_NEXT_C_HEADERS" (nil . 2) (c++-mode . 2) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 2)) ("•_GLIBCXX_INCLUDE_NEXT_C_HEADERS" (nil . 1) (c++-mode . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1)) (":hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1)) ("c++-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-eglot.el") . 1)) ("put" (nil . 1) (c++-mode . 1) ((:symbol "cout") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("tellp" (nil . 1) (c++-mode . 1) ((:symbol "cout") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("lsp-auto-guess-root" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("namespace" (nil . 1) (c++-mode . 1) ((:keyword "using") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("characterAge" (nil . 4) (c++-mode . 4) ((:keyword "namespace") . 4) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 4)) ("characterName" (nil . 3) (c++-mode . 3) ((:keyword "namespace") . 3) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 3)) ("characterAge" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("characterAge" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("characterName" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("characterAge" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("characterName" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) ("lsp-find-definition" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("make-lsp-session" (nil . 1) (lisp-interaction-mode . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("lsp-deferred" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("lsp-python-ms-nupkg-channel" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("flush" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:symbol "std") . 1) ((:file "/media/linyi/DataScience/cpp_proj/restudy_udacity/helloworld/src/helloworld.cpp") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 5)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("lsp-find-definition" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) ("emacs-major-version" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) ("DataFrame" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/test/test_loss.py") . 1)) ("cholesky" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "linalg") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/test/test_loss.py") . 1)) (":preface" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp.el") . 1)) ("torch" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/StockData/Projects/Pypkg/stocketl/tdx_online/tdx_static_api.py") . 1)) ("torch.nn.functional" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/train.py") . 1)) ("stocketl.tdx_online" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/train.py") . 1)) ("get_minute_time_trade" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/DataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/train.py") . 1)) ("doom-modeline-minor-modes" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) ("doom-modeline-env-version" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "setq") . 3) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 3)) ("doom-modeline-env-version" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) ("doom-modeline-env-version" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) ("doom-modeline-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) ("after-focus-change-function" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) ("pyvenv-activate" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("pyvenv-workon" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-lsp-python.el") . 1)) ("emacs-major-version" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) ("word_couts" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("word_couts.most_common" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("key=" (nil . 3) (python-mode . 3) ((:keyword "import") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 3)) ("key=itemgetter" (nil . 4) (python-mode . 4) ((:keyword "import") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 4)) ("row_by_name" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("key=" (nil . 1) (python-mode . 1) ((:keyword "print") . 2) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("key=itemgetter" (nil . 1) (python-mode . 1) ((:keyword "print") . 3) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("row_by_uid" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("key=" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("key=itemgetter" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("row_sorted" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("key=itemgetter" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("rows_by_date" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 2)) ("rows_by_date" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("namedtuple" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("fnmatch" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) ("fnmatchcase" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/DataScience/pytest/test_ubuntu.py") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-ui.el") . 1)) ("evil-define-minor-mode-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-minor-mode-key") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1)) ("anaconda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-minor-mode-key") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1)) ("anaconda-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-minor-mode-key") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1)) ("delete-window" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "evil-define-minor-mode-key") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 2)) ("fundamental-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-minor-mode-key") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "cl-pushnew") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1)) ("function-key-map" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "cl-pushnew") . 2) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 2)) ("delete-window" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "cl-pushnew") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1)) ("function-key-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "cl-pushnew") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1)) ("fundamental-mode-abbrev-table" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "cl-pushnew") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-python.el") . 1)) ("AutoModelForMaskedLM" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("AutoModelWithLMHead" (nil . 2) (python-mode . 2) ((:keyword "self") . 2) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2)) ("AutoModelForSequenceClassification" (nil . 3) (python-mode . 3) ((:keyword "import") . 2) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2)) ("AutoModelForSequenceClassification" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("BertConfig" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2)) ("BertConfig" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("BertConfig.from_pretrained" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("AutoModelWithLMHead" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("transformers" (nil . 2) (python-mode . 2) ((:keyword "from") . 2) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 2)) ("Pipeline" (nil . 2) (python-mode . 2) ((:keyword "import") . 2) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 2)) ("pipeline" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("model=" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("classifier" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("transformers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("AutoModelForSequenceClassification" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("chinese" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:symbol "base") . 2) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("AutoModelForSequenceClassification.from_pretrained" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("Pipeline" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("tokenizer" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("truncation=" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("return_tensors=" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("pt_outputs" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 2)) ("torch.nn.functional" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("pt_outputs" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/trans_api.py") . 1)) ("BertTokenizer" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2)) ("BertTokenizer" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("BertForSequenceClassification" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("BertModel" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2)) ("BertModel" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("targets" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("metrics.precision_score" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("torch.nn.functional" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("micro" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("metrics" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("torch.nn.functional.sigmoid" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("chinese" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:symbol "base") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese2.py") . 1)) ("test_dataset" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese2.py") . 1)) ("train_dataset" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese2.py") . 1)) ("TextRCNN" (nil . 1) (json-mode . 1) ((:keyword "\"model_name\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/NeuralNLP-NeuralClassifier/conf/train_jlr_test.json") . 1)) ("total_loss" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("torch.optim.AdamW" (nil . 2) (python-mode . 2) ((:keyword "return") . 2) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 2)) ("torch.optim.AdamW" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/media/linyi/nDataScience/pytorch/multi-label-classification/transformers_test/study_transformers/multi_label_classification_chinese.py") . 1)) ("get_label_map" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 2)) ("get_label_map" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1)) ("self.conf" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1)) ("label_map" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1)) ("self.id_to_label_map" (nil . 3) (python-mode . 3) ((:keyword "self") . 3) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 3)) ("self.id_to_label_map" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1)) ("self.id_to_label_map" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1)) ("label" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1)) ("../data/after_sales_gm_data2.json" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/tag_on/output_result.py") . 1)) ("./Aftersales/Aftersales/Q1_Buick_data.xlsx" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1)) ("./Aftersales/Aftersales/Q1_Cadillac_data.xlsx" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1)) ("./Aftersales/Aftersales/Q1_Chevy_data.xlsx" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1)) ("./Aftersales/Aftersales/Q2_Buick_data.xlsx" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1)) ("../data/after_sales_gm_Q1_buick.json" (nil . 1) (json-mode . 1) ((:keyword "\"train_json_files\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("../data/after_sales_gm_Q1_cadillac.json" (nil . 1) (json-mode . 1) ((:keyword "\"train_json_files\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("../data/after_sales_gm_Q1_chevy.json" (nil . 1) (json-mode . 1) ((:keyword "\"train_json_files\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("../data/after_sales_gm_Q2_buick.json" (nil . 1) (json-mode . 1) ((:keyword "\"train_json_files\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("../data/after_sales_gm_Q2_cadillac.json" (nil . 1) (json-mode . 1) ((:keyword "\"train_json_files\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("../data/after_sales_gm_Q2_chevy.json" (nil . 1) (json-mode . 1) ((:keyword "\"train_json_files\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("../data/gm_labels_dict.json" (nil . 1) (json-mode . 1) ((:keyword "\"label_dict\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("sequence_labels" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1)) ("sequence" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/dataset/bert_dataset.py") . 1)) ("WORKAROUND" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1)) ("./json_files/" (nil . 1) (python-mode . 1) ((:keyword "with") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/prepare_data/GM_NLP/make_json_gm.py") . 1)) ("best_epoch" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/train.py") . 1)) ("../checkpoint_dir/" (nil . 1) (json-mode . 1) ((:keyword "\"model_name\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("../checkpoint_dir/bert-base-chinese_0" (nil . 1) (json-mode . 1) ((:keyword "\"model_name\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("../checkpoint_dir/bert-base-chinese_best" (nil . 1) (json-mode . 1) ((:keyword "\"model_name\"") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("chinese" (nil . 1) (json-mode . 1) ((:keyword "\"model_name\"") . 1) ((:symbol "base") . 1) ((:file "/media/linyi/nDataScience/pytorch/AINLP/conf/train_gm_official.json") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linyi/.emacs.d/init.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 7)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("ScanState" (nil . 1) (go-mode . 1) ((:keyword "func") . 1) ((:symbol "fmt") . 1) ((:file "/media/linyi/nDataScience/GO/src/test.com/hello.go") . 1)) ("ScanState" (nil . 1) (go-mode . 1) ((:keyword "func") . 1) ((:symbol "fmt") . 1) ((:file "/media/linyi/nDataScience/GO/src/test.com/hello.go") . 1)) ("electric-operator-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-program-basis.el") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("gofmt-command" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("goimports" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("indent-tabs-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("before-save-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("gofmt-before-save" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("tab-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("tab-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("Args" (nil . 1) (go-mode . 1) ((:keyword "for") . 1) ((:symbol "os") . 1) ((:file "/home/linyi/go/src/main/hello.go") . 1)) ("s" (nil . 1) (go-mode . 1) ((:keyword "range") . 1) ((:file "/home/linyi/go/src/main/hello.go") . 1)) ("electric-operator-add-rules-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-program-basis.el") . 1)) ("go-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-program-basis.el") . 1)) ("Args" (nil . 1) (go-mode . 1) ((:keyword "func") . 1) ((:symbol "os") . 1) ((:file "/home/linyi/go/src/main/hello.go") . 1)) ("int" (nil . 1) (go-mode . 1) ((:keyword "var") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1)) ("string" (nil . 1) (go-mode . 1) ((:keyword "var") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1)) ("Println" (nil . 1) (go-mode . 1) ((:keyword "var") . 1) ((:symbol "fmt") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1)) ("tab-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("tab-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("tab-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("Args" (nil . 1) (go-mode . 1) ((:keyword "var") . 3) ((:symbol "os") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 3)) ("Args" (nil . 1) (go-mode . 1) ((:keyword "var") . 1) ((:symbol "os") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1)) ("Args" (nil . 1) (go-mode . 1) ((:keyword "var") . 1) ((:symbol "os") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1)) ("syscall" (nil . 1) (go-mode . 1) ((:keyword "var") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/main.go") . 1)) ("os" (nil . 1) (go-mode . 1) ((:keyword "var") . 1) ((:file "/home/linyi/go/src/code.oldboy.com/studygolang/lesson1/datatype/main.go") . 1)) ("electric-operator-add-rules-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("electric-spacing-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1)) ("go-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linyi/.emacs.d/lisp/init-golang.el") . 1))] company-statistics--index 1)